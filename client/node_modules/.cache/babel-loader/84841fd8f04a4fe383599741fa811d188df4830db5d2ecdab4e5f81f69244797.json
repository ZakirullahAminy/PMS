{"ast":null,"code":"\n// // ==== React Component (ProductManager.jsx) ====\n// import { useEffect, useState } from \"react\";\n\n// function Product() {\n//   const [products, setProducts] = useState([]);\n//   const [categories, setCategories] = useState([]);\n//   const [selectedCategory, setSelectedCategory] = useState(\"\");\n\n//   const [formData, setFormData] = useState({\n//     name: \"\",\n//     description: \"\",\n//     imageUrl: \"\",\n//     price: \"\",\n//     category: \"\",\n//   });\n\n//   useEffect(() => {\n//     fetch(\"http://localhost:5000/api/products\")\n//       .then((res) => res.json())\n//       .then(setProducts);\n\n//     fetch(\"http://localhost:5000/api/categories\")\n//       .then((res) => res.json())\n//       .then(setCategories);\n//   }, []);\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     const res = await fetch(\"http://localhost:5000/api/products\", {\n//       method: \"POST\",\n//       headers: { \"Content-Type\": \"application/json\" },\n//       body: JSON.stringify(formData),\n//     });\n//     if (res.ok) {\n//       const newProd = await res.json();\n//       setProducts((prev) => [...prev, newProd]);\n//       setFormData({ name: \"\", description: \"\", imageUrl: \"\", price: \"\", category: \"\" });\n//     }\n//   };\n\n//   const handleDelete = async (id) => {\n//     if (!window.confirm(\"Delete this product?\")) return;\n//     await fetch(`http://localhost:5000/api/products/${id}`, { method: \"DELETE\" });\n//     setProducts(products.filter((p) => p._id !== id));\n//   };\n\n//   return (\n//     <div className=\"p-6\">\n//       <h1 className=\"text-xl font-bold\">Add Product</h1>\n//       <form onSubmit={handleSubmit} className=\"space-y-2\">\n//         <input value={formData.name} onChange={(e) => setFormData({ ...formData, name: e.target.value })} placeholder=\"Name\" className=\"border p-2 w-full\" />\n//         <input value={formData.description} onChange={(e) => setFormData({ ...formData, description: e.target.value })} placeholder=\"Description\" className=\"border p-2 w-full\" />\n//         <input value={formData.imageUrl} onChange={(e) => setFormData({ ...formData, imageUrl: e.target.value })} placeholder=\"Image URL\" className=\"border p-2 w-full\" />\n//         <input type=\"number\" value={formData.price} onChange={(e) => setFormData({ ...formData, price: e.target.value })} placeholder=\"Price\" className=\"border p-2 w-full\" />\n//         <select value={formData.category} onChange={(e) => setFormData({ ...formData, category: e.target.value })} className=\"border p-2 w-full\">\n//           <option value=\"\">Select Category</option>\n//           {categories.map((cat) => (\n//             <option key={cat._id} value={cat._id}>{cat.name}</option>\n//           ))}\n//         </select>\n//         <button type=\"submit\" className=\"bg-blue-500 text-white px-4 py-2 rounded\">Add</button>\n//       </form>\n\n//       <div className=\"mt-6\">\n//         <h2 className=\"text-lg font-semibold\">Filter by Category</h2>\n//         <select onChange={(e) => setSelectedCategory(e.target.value)} className=\"border p-2\">\n//           <option value=\"\">All</option>\n//           {categories.map((cat) => (\n//             <option key={cat._id} value={cat._id}>{cat.name}</option>\n//           ))}\n//         </select>\n\n//         <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mt-4\">\n//           {products\n//             .filter(p => !selectedCategory || p.category?._id === selectedCategory)\n//             .map(prod => (\n//               <div key={prod._id} className=\"border p-4 rounded shadow\">\n//                 <img src={prod.imageUrl} alt={prod.name} className=\"h-40 w-full object-cover mb-2\" />\n//                 <h3 className=\"font-bold\">{prod.name}</h3>\n//                 <p>{prod.description}</p>\n//                 <p className=\"text-sm text-gray-600\">${prod.price}</p>\n//                 <p className=\"text-xs text-gray-400\">{prod.category?.name}</p>\n//                 <button onClick={() => handleDelete(prod._id)} className=\"mt-2 bg-red-500 text-white px-3 py-1 rounded\">Delete</button>\n//               </div>\n//             ))}\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default Product;","map":{"version":3,"names":[],"sources":["C:/Users/dell/Desktop/my-fullstack-app/client/src/Product.jsx"],"sourcesContent":["\r\n// // ==== React Component (ProductManager.jsx) ====\r\n// import { useEffect, useState } from \"react\";\r\n\r\n// function Product() {\r\n//   const [products, setProducts] = useState([]);\r\n//   const [categories, setCategories] = useState([]);\r\n//   const [selectedCategory, setSelectedCategory] = useState(\"\");\r\n\r\n//   const [formData, setFormData] = useState({\r\n//     name: \"\",\r\n//     description: \"\",\r\n//     imageUrl: \"\",\r\n//     price: \"\",\r\n//     category: \"\",\r\n//   });\r\n\r\n//   useEffect(() => {\r\n//     fetch(\"http://localhost:5000/api/products\")\r\n//       .then((res) => res.json())\r\n//       .then(setProducts);\r\n\r\n//     fetch(\"http://localhost:5000/api/categories\")\r\n//       .then((res) => res.json())\r\n//       .then(setCategories);\r\n//   }, []);\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     const res = await fetch(\"http://localhost:5000/api/products\", {\r\n//       method: \"POST\",\r\n//       headers: { \"Content-Type\": \"application/json\" },\r\n//       body: JSON.stringify(formData),\r\n//     });\r\n//     if (res.ok) {\r\n//       const newProd = await res.json();\r\n//       setProducts((prev) => [...prev, newProd]);\r\n//       setFormData({ name: \"\", description: \"\", imageUrl: \"\", price: \"\", category: \"\" });\r\n//     }\r\n//   };\r\n\r\n//   const handleDelete = async (id) => {\r\n//     if (!window.confirm(\"Delete this product?\")) return;\r\n//     await fetch(`http://localhost:5000/api/products/${id}`, { method: \"DELETE\" });\r\n//     setProducts(products.filter((p) => p._id !== id));\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"p-6\">\r\n//       <h1 className=\"text-xl font-bold\">Add Product</h1>\r\n//       <form onSubmit={handleSubmit} className=\"space-y-2\">\r\n//         <input value={formData.name} onChange={(e) => setFormData({ ...formData, name: e.target.value })} placeholder=\"Name\" className=\"border p-2 w-full\" />\r\n//         <input value={formData.description} onChange={(e) => setFormData({ ...formData, description: e.target.value })} placeholder=\"Description\" className=\"border p-2 w-full\" />\r\n//         <input value={formData.imageUrl} onChange={(e) => setFormData({ ...formData, imageUrl: e.target.value })} placeholder=\"Image URL\" className=\"border p-2 w-full\" />\r\n//         <input type=\"number\" value={formData.price} onChange={(e) => setFormData({ ...formData, price: e.target.value })} placeholder=\"Price\" className=\"border p-2 w-full\" />\r\n//         <select value={formData.category} onChange={(e) => setFormData({ ...formData, category: e.target.value })} className=\"border p-2 w-full\">\r\n//           <option value=\"\">Select Category</option>\r\n//           {categories.map((cat) => (\r\n//             <option key={cat._id} value={cat._id}>{cat.name}</option>\r\n//           ))}\r\n//         </select>\r\n//         <button type=\"submit\" className=\"bg-blue-500 text-white px-4 py-2 rounded\">Add</button>\r\n//       </form>\r\n\r\n//       <div className=\"mt-6\">\r\n//         <h2 className=\"text-lg font-semibold\">Filter by Category</h2>\r\n//         <select onChange={(e) => setSelectedCategory(e.target.value)} className=\"border p-2\">\r\n//           <option value=\"\">All</option>\r\n//           {categories.map((cat) => (\r\n//             <option key={cat._id} value={cat._id}>{cat.name}</option>\r\n//           ))}\r\n//         </select>\r\n\r\n//         <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mt-4\">\r\n//           {products\r\n//             .filter(p => !selectedCategory || p.category?._id === selectedCategory)\r\n//             .map(prod => (\r\n//               <div key={prod._id} className=\"border p-4 rounded shadow\">\r\n//                 <img src={prod.imageUrl} alt={prod.name} className=\"h-40 w-full object-cover mb-2\" />\r\n//                 <h3 className=\"font-bold\">{prod.name}</h3>\r\n//                 <p>{prod.description}</p>\r\n//                 <p className=\"text-sm text-gray-600\">${prod.price}</p>\r\n//                 <p className=\"text-xs text-gray-400\">{prod.category?.name}</p>\r\n//                 <button onClick={() => handleDelete(prod._id)} className=\"mt-2 bg-red-500 text-white px-3 py-1 rounded\">Delete</button>\r\n//               </div>\r\n//             ))}\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Product;\r\n\r\n"],"mappings":";AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}