{"ast":null,"code":"// import { useEffect, useState } from \"react\";\n\n// function Product() {\n//   const [products, setProducts] = useState([]);\n//   const [categories, setCategories] = useState([]);\n//   const [selectedCategory, setSelectedCategory] = useState(\"\");\n//   const [searchQuery, setSearchQuery] = useState(\"\");\n//   const [page, setPage] = useState(1);\n//   const [totalPages, setTotalPages] = useState(1);\n//   const [editingId, setEditingId] = useState(null);\n//   const [editingCategoryId, setEditingCategoryId] = useState(null);\n//   const [newCategory, setNewCategory] = useState(\"\");\n\n//   const [formData, setFormData] = useState({\n//     name: \"\",\n//     description: \"\",\n//     imageUrl: \"\",\n//     price: \"\",\n//     category: \"\",\n//   });\n\n//   useEffect(() => {\n//     fetch(\"http://localhost:5000/api/categories\")\n//       .then((res) => res.json())\n//       .then(setCategories);\n//   }, []);\n\n//   useEffect(() => {\n//     const url = new URL(\"http://localhost:5000/api/products\");\n//     if (selectedCategory) url.searchParams.append(\"category\", selectedCategory);\n//     if (searchQuery) url.searchParams.append(\"search\", searchQuery);\n//     url.searchParams.append(\"page\", page);\n//     url.searchParams.append(\"limit\", 9);\n\n//     fetch(url.toString())\n//       .then((res) => res.json())\n//       .then((data) => {\n//         setProducts(data.products);\n//         setTotalPages(data.totalPages);\n//       });\n//   }, [selectedCategory, searchQuery, page]);\n\n//   const refreshCategories = async () => {\n//     const res = await fetch(\"http://localhost:5000/api/categories\");\n//     const data = await res.json();\n//     setCategories(data);\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     const method = editingId ? \"PUT\" : \"POST\";\n//     const endpoint = editingId\n//       ? `http://localhost:5000/api/products/${editingId}`\n//       : \"http://localhost:5000/api/products\";\n\n//     const res = await fetch(endpoint, {\n//       method,\n//       headers: { \"Content-Type\": \"application/json\" },\n//       body: JSON.stringify(formData),\n//     });\n\n//     if (res.ok) {\n//       setFormData({\n//         name: \"\",\n//         description: \"\",\n//         imageUrl: \"\",\n//         price: \"\",\n//         category: \"\",\n//       });\n//       setEditingId(null);\n//       setPage(1); // refresh to page 1\n//       const data = await res.json();\n//     }\n//   };\n\n//   const handleDelete = async (id) => {\n//     if (!window.confirm(\"Delete this product?\")) return;\n//     await fetch(`http://localhost:5000/api/products/${id}`, {\n//       method: \"DELETE\",\n//     });\n//     setProducts((prev) => prev.filter((p) => p._id !== id));\n//   };\n\n//   const handleEdit = (prod) => {\n//     setFormData({\n//       name: prod.name,\n//       description: prod.description,\n//       imageUrl: prod.imageUrl,\n//       price: prod.price,\n//       category: prod.category?._id || \"\",\n//     });\n//     setEditingId(prod._id);\n//     window.scrollTo({ top: 0, behavior: \"smooth\" });\n//   };\n\n//   const handleAddCategory = async (e) => {\n//     e.preventDefault();\n//     if (!newCategory.trim()) return;\n\n//     const method = editingCategoryId ? \"PUT\" : \"POST\";\n//     const endpoint = editingCategoryId\n//       ? `http://localhost:5000/api/categories/${editingCategoryId}`\n//       : \"http://localhost:5000/api/categories\";\n\n//     const res = await fetch(endpoint, {\n//       method,\n//       headers: { \"Content-Type\": \"application/json\" },\n//       body: JSON.stringify({ name: newCategory }),\n//     });\n\n//     if (res.ok) {\n//       await refreshCategories();\n//       setNewCategory(\"\");\n//       setEditingCategoryId(null);\n//     }\n//   };\n\n//   const handleDeleteCategory = async (id) => {\n//     if (!window.confirm(\"Delete this category?\")) return;\n//     const res = await fetch(`http://localhost:5000/api/categories/${id}`, {\n//       method: \"DELETE\",\n//     });\n\n//     const data = await res.json();\n//     if (res.ok) {\n//       await refreshCategories();\n//     } else {\n//       alert(data.message || \"Could not delete category\");\n//     }\n//   };\n\n//   return (\n//     <div className=\"p-6\">\n//       <h2 className=\"text-lg font-bold mb-2\">PMS</h2>\n\n//       {/* Add/Edit Category */}\n//       <div className=\"my-6\">\n//         <h1 className=\"text-xl font-bold\">\n//           {editingCategoryId ? \"Edit Category\" : \"Add New Category\"}\n//         </h1>\n//         <form\n//           onSubmit={handleAddCategory}\n//           className=\"flex flex-col gap-2 items-start mt-2\"\n//         >\n//           <input\n//             value={newCategory}\n//             onChange={(e) => setNewCategory(e.target.value)}\n//             placeholder=\"Category name\"\n//             className=\"border p-2 w-full\"\n//           />\n//           <div className=\"flex gap-2\">\n//             <button\n//               type=\"submit\"\n//               className=\"bg-green-600 text-white px-4 py-2 rounded\"\n//             >\n//               {editingCategoryId ? \"Update\" : \"Add\"}\n//             </button>\n//             {editingCategoryId && (\n//               <button\n//                 type=\"button\"\n//                 onClick={() => {\n//                   setNewCategory(\"\");\n//                   setEditingCategoryId(null);\n//                 }}\n//                 className=\"bg-gray-500 text-white px-4 py-2 rounded\"\n//               >\n//                 Cancel\n//               </button>\n//             )}\n//           </div>\n//         </form>\n//       </div>\n\n//       {/* Category List */}\n//       <div className=\"mb-6\">\n//         <h2 className=\"text-lg font-semibold mb-2\">All Categories</h2>\n//         <ul className=\"space-y-1\">\n//           {categories.map((cat) => (\n//             <li key={cat._id} className=\"flex items-center justify-between\">\n//               <span>{cat.name}</span>\n//               <div className=\"flex gap-2\">\n//                 <button\n//                   onClick={() => {\n//                     setNewCategory(cat.name);\n//                     setEditingCategoryId(cat._id);\n//                   }}\n//                   className=\"text-sm bg-yellow-500 text-white px-2 py-1 rounded\"\n//                 >\n//                   Edit\n//                 </button>\n//                 <button\n//                   onClick={() => handleDeleteCategory(cat._id)}\n//                   className=\"text-sm bg-red-500 text-white px-2 py-1 rounded\"\n//                 >\n//                   Delete\n//                 </button>\n//               </div>\n//             </li>\n//           ))}\n//         </ul>\n//       </div>\n\n//       {/* Add/Edit Product */}\n//       <h1 className=\"text-xl font-bold\">\n//         {editingId ? \"Edit Product\" : \"Add Product\"}\n//       </h1>\n//       <form onSubmit={handleSubmit} className=\"space-y-2\">\n//         <input\n//           value={formData.name}\n//           onChange={(e) => setFormData({ ...formData, name: e.target.value })}\n//           placeholder=\"Name\"\n//           className=\"border p-2 w-full\"\n//         />\n//         <input\n//           value={formData.description}\n//           onChange={(e) =>\n//             setFormData({ ...formData, description: e.target.value })\n//           }\n//           placeholder=\"Description\"\n//           className=\"border p-2 w-full\"\n//         />\n//         <input\n//           value={formData.imageUrl}\n//           onChange={(e) =>\n//             setFormData({ ...formData, imageUrl: e.target.value })\n//           }\n//           placeholder=\"Image URL\"\n//           className=\"border p-2 w-full\"\n//         />\n//         <input\n//           type=\"number\"\n//           value={formData.price}\n//           onChange={(e) => setFormData({ ...formData, price: e.target.value })}\n//           placeholder=\"Price\"\n//           className=\"border p-2 w-full\"\n//         />\n//         <select\n//           value={formData.category}\n//           onChange={(e) =>\n//             setFormData({ ...formData, category: e.target.value })\n//           }\n//           className=\"border p-2 w-full\"\n//         >\n//           <option value=\"\">Select Category</option>\n//           {categories.map((cat) => (\n//             <option key={cat._id} value={cat._id}>\n//               {cat.name}\n//             </option>\n//           ))}\n//         </select>\n//         <div className=\"flex gap-2\">\n//           <button\n//             type=\"submit\"\n//             className=\"bg-blue-500 text-white px-4 py-2 rounded\"\n//           >\n//             {editingId ? \"Update\" : \"Add Product\"}\n//           </button>\n//           {editingId && (\n//             <button\n//               type=\"button\"\n//               onClick={() => {\n//                 setFormData({\n//                   name: \"\",\n//                   description: \"\",\n//                   imageUrl: \"\",\n//                   price: \"\",\n//                   category: \"\",\n//                 });\n//                 setEditingId(null);\n//               }}\n//               className=\"bg-gray-500 text-white px-4 py-2 rounded\"\n//             >\n//               Cancel\n//             </button>\n//           )}\n//         </div>\n//       </form>\n\n//       {/* Filter & Search */}\n//       <div className=\"mt-6\">\n//         <h1 className=\"text-xl font-bold my-6\">Filter by Category</h1>\n//         <select\n//           onChange={(e) => {\n//             setSelectedCategory(e.target.value);\n//             setPage(1);\n//           }}\n//           className=\"border p-2 w-52\"\n//         >\n//           <option value=\"\">All</option>\n//           {categories.map((cat) => (\n//             <option key={cat._id} value={cat._id}>\n//               {cat.name}\n//             </option>\n//           ))}\n//         </select>\n\n//         <div className=\"mt-4\">\n//           <input\n//             type=\"text\"\n//             placeholder=\"Search products...\"\n//             value={searchQuery}\n//             onChange={(e) => {\n//               setSearchQuery(e.target.value);\n//               setPage(1);\n//             }}\n//             className=\"border p-2 w-full md:w-1/2\"\n//           />\n//         </div>\n\n//         {/* Product List */}\n//         <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mt-4\">\n//           {products.map((prod) => (\n//             <div key={prod._id} className=\"border p-4 rounded shadow\">\n//               <img\n//                 src={prod.imageUrl}\n//                 alt={prod.name}\n//                 className=\"h-40 w-full object-cover mb-2\"\n//               />\n//               <h3 className=\"font-bold\">{prod.name}</h3>\n//               <p>{prod.description}</p>\n//               <p className=\"text-sm text-gray-600\">${prod.price}</p>\n//               <p className=\"text-xs text-gray-400\">{prod.category?.name}</p>\n//               <div className=\"flex gap-2 mt-2\">\n//                 <button\n//                   onClick={() => handleEdit(prod)}\n//                   className=\"bg-yellow-500 text-white px-3 py-1 rounded\"\n//                 >\n//                   Edit\n//                 </button>\n//                 <button\n//                   onClick={() => handleDelete(prod._id)}\n//                   className=\"bg-red-500 text-white px-3 py-1 rounded\"\n//                 >\n//                   Delete\n//                 </button>\n//               </div>\n//             </div>\n//           ))}\n//         </div>\n\n//         {/* Pagination */}\n//         <div className=\"flex justify-center mt-4 gap-2\">\n//           <button\n//             disabled={page <= 1}\n//             onClick={() => setPage((p) => p - 1)}\n//             className=\"px-4 py-2 bg-gray-300 rounded disabled:opacity-50\"\n//           >\n//             Prev\n//           </button>\n//           <span className=\"px-4 py-2\">\n//             Page {page} of {totalPages}\n//           </span>\n//           <button\n//             disabled={page >= totalPages}\n//             onClick={() => setPage((p) => p + 1)}\n//             className=\"px-4 py-2 bg-gray-300 rounded disabled:opacity-50\"\n//           >\n//             Next\n//           </button>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default Product;","map":{"version":3,"names":[],"sources":["C:/Users/dell/Desktop/my-fullstack-app/client/src/Product.jsx"],"sourcesContent":["// import { useEffect, useState } from \"react\";\r\n\r\n// function Product() {\r\n//   const [products, setProducts] = useState([]);\r\n//   const [categories, setCategories] = useState([]);\r\n//   const [selectedCategory, setSelectedCategory] = useState(\"\");\r\n//   const [searchQuery, setSearchQuery] = useState(\"\");\r\n//   const [page, setPage] = useState(1);\r\n//   const [totalPages, setTotalPages] = useState(1);\r\n//   const [editingId, setEditingId] = useState(null);\r\n//   const [editingCategoryId, setEditingCategoryId] = useState(null);\r\n//   const [newCategory, setNewCategory] = useState(\"\");\r\n\r\n//   const [formData, setFormData] = useState({\r\n//     name: \"\",\r\n//     description: \"\",\r\n//     imageUrl: \"\",\r\n//     price: \"\",\r\n//     category: \"\",\r\n//   });\r\n\r\n//   useEffect(() => {\r\n//     fetch(\"http://localhost:5000/api/categories\")\r\n//       .then((res) => res.json())\r\n//       .then(setCategories);\r\n//   }, []);\r\n\r\n//   useEffect(() => {\r\n//     const url = new URL(\"http://localhost:5000/api/products\");\r\n//     if (selectedCategory) url.searchParams.append(\"category\", selectedCategory);\r\n//     if (searchQuery) url.searchParams.append(\"search\", searchQuery);\r\n//     url.searchParams.append(\"page\", page);\r\n//     url.searchParams.append(\"limit\", 9);\r\n\r\n//     fetch(url.toString())\r\n//       .then((res) => res.json())\r\n//       .then((data) => {\r\n//         setProducts(data.products);\r\n//         setTotalPages(data.totalPages);\r\n//       });\r\n//   }, [selectedCategory, searchQuery, page]);\r\n\r\n//   const refreshCategories = async () => {\r\n//     const res = await fetch(\"http://localhost:5000/api/categories\");\r\n//     const data = await res.json();\r\n//     setCategories(data);\r\n//   };\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     const method = editingId ? \"PUT\" : \"POST\";\r\n//     const endpoint = editingId\r\n//       ? `http://localhost:5000/api/products/${editingId}`\r\n//       : \"http://localhost:5000/api/products\";\r\n\r\n//     const res = await fetch(endpoint, {\r\n//       method,\r\n//       headers: { \"Content-Type\": \"application/json\" },\r\n//       body: JSON.stringify(formData),\r\n//     });\r\n\r\n//     if (res.ok) {\r\n//       setFormData({\r\n//         name: \"\",\r\n//         description: \"\",\r\n//         imageUrl: \"\",\r\n//         price: \"\",\r\n//         category: \"\",\r\n//       });\r\n//       setEditingId(null);\r\n//       setPage(1); // refresh to page 1\r\n//       const data = await res.json();\r\n//     }\r\n//   };\r\n\r\n//   const handleDelete = async (id) => {\r\n//     if (!window.confirm(\"Delete this product?\")) return;\r\n//     await fetch(`http://localhost:5000/api/products/${id}`, {\r\n//       method: \"DELETE\",\r\n//     });\r\n//     setProducts((prev) => prev.filter((p) => p._id !== id));\r\n//   };\r\n\r\n//   const handleEdit = (prod) => {\r\n//     setFormData({\r\n//       name: prod.name,\r\n//       description: prod.description,\r\n//       imageUrl: prod.imageUrl,\r\n//       price: prod.price,\r\n//       category: prod.category?._id || \"\",\r\n//     });\r\n//     setEditingId(prod._id);\r\n//     window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n//   };\r\n\r\n//   const handleAddCategory = async (e) => {\r\n//     e.preventDefault();\r\n//     if (!newCategory.trim()) return;\r\n\r\n//     const method = editingCategoryId ? \"PUT\" : \"POST\";\r\n//     const endpoint = editingCategoryId\r\n//       ? `http://localhost:5000/api/categories/${editingCategoryId}`\r\n//       : \"http://localhost:5000/api/categories\";\r\n\r\n//     const res = await fetch(endpoint, {\r\n//       method,\r\n//       headers: { \"Content-Type\": \"application/json\" },\r\n//       body: JSON.stringify({ name: newCategory }),\r\n//     });\r\n\r\n//     if (res.ok) {\r\n//       await refreshCategories();\r\n//       setNewCategory(\"\");\r\n//       setEditingCategoryId(null);\r\n//     }\r\n//   };\r\n\r\n//   const handleDeleteCategory = async (id) => {\r\n//     if (!window.confirm(\"Delete this category?\")) return;\r\n//     const res = await fetch(`http://localhost:5000/api/categories/${id}`, {\r\n//       method: \"DELETE\",\r\n//     });\r\n\r\n//     const data = await res.json();\r\n//     if (res.ok) {\r\n//       await refreshCategories();\r\n//     } else {\r\n//       alert(data.message || \"Could not delete category\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"p-6\">\r\n//       <h2 className=\"text-lg font-bold mb-2\">PMS</h2>\r\n\r\n//       {/* Add/Edit Category */}\r\n//       <div className=\"my-6\">\r\n//         <h1 className=\"text-xl font-bold\">\r\n//           {editingCategoryId ? \"Edit Category\" : \"Add New Category\"}\r\n//         </h1>\r\n//         <form\r\n//           onSubmit={handleAddCategory}\r\n//           className=\"flex flex-col gap-2 items-start mt-2\"\r\n//         >\r\n//           <input\r\n//             value={newCategory}\r\n//             onChange={(e) => setNewCategory(e.target.value)}\r\n//             placeholder=\"Category name\"\r\n//             className=\"border p-2 w-full\"\r\n//           />\r\n//           <div className=\"flex gap-2\">\r\n//             <button\r\n//               type=\"submit\"\r\n//               className=\"bg-green-600 text-white px-4 py-2 rounded\"\r\n//             >\r\n//               {editingCategoryId ? \"Update\" : \"Add\"}\r\n//             </button>\r\n//             {editingCategoryId && (\r\n//               <button\r\n//                 type=\"button\"\r\n//                 onClick={() => {\r\n//                   setNewCategory(\"\");\r\n//                   setEditingCategoryId(null);\r\n//                 }}\r\n//                 className=\"bg-gray-500 text-white px-4 py-2 rounded\"\r\n//               >\r\n//                 Cancel\r\n//               </button>\r\n//             )}\r\n//           </div>\r\n//         </form>\r\n//       </div>\r\n\r\n//       {/* Category List */}\r\n//       <div className=\"mb-6\">\r\n//         <h2 className=\"text-lg font-semibold mb-2\">All Categories</h2>\r\n//         <ul className=\"space-y-1\">\r\n//           {categories.map((cat) => (\r\n//             <li key={cat._id} className=\"flex items-center justify-between\">\r\n//               <span>{cat.name}</span>\r\n//               <div className=\"flex gap-2\">\r\n//                 <button\r\n//                   onClick={() => {\r\n//                     setNewCategory(cat.name);\r\n//                     setEditingCategoryId(cat._id);\r\n//                   }}\r\n//                   className=\"text-sm bg-yellow-500 text-white px-2 py-1 rounded\"\r\n//                 >\r\n//                   Edit\r\n//                 </button>\r\n//                 <button\r\n//                   onClick={() => handleDeleteCategory(cat._id)}\r\n//                   className=\"text-sm bg-red-500 text-white px-2 py-1 rounded\"\r\n//                 >\r\n//                   Delete\r\n//                 </button>\r\n//               </div>\r\n//             </li>\r\n//           ))}\r\n//         </ul>\r\n//       </div>\r\n\r\n//       {/* Add/Edit Product */}\r\n//       <h1 className=\"text-xl font-bold\">\r\n//         {editingId ? \"Edit Product\" : \"Add Product\"}\r\n//       </h1>\r\n//       <form onSubmit={handleSubmit} className=\"space-y-2\">\r\n//         <input\r\n//           value={formData.name}\r\n//           onChange={(e) => setFormData({ ...formData, name: e.target.value })}\r\n//           placeholder=\"Name\"\r\n//           className=\"border p-2 w-full\"\r\n//         />\r\n//         <input\r\n//           value={formData.description}\r\n//           onChange={(e) =>\r\n//             setFormData({ ...formData, description: e.target.value })\r\n//           }\r\n//           placeholder=\"Description\"\r\n//           className=\"border p-2 w-full\"\r\n//         />\r\n//         <input\r\n//           value={formData.imageUrl}\r\n//           onChange={(e) =>\r\n//             setFormData({ ...formData, imageUrl: e.target.value })\r\n//           }\r\n//           placeholder=\"Image URL\"\r\n//           className=\"border p-2 w-full\"\r\n//         />\r\n//         <input\r\n//           type=\"number\"\r\n//           value={formData.price}\r\n//           onChange={(e) => setFormData({ ...formData, price: e.target.value })}\r\n//           placeholder=\"Price\"\r\n//           className=\"border p-2 w-full\"\r\n//         />\r\n//         <select\r\n//           value={formData.category}\r\n//           onChange={(e) =>\r\n//             setFormData({ ...formData, category: e.target.value })\r\n//           }\r\n//           className=\"border p-2 w-full\"\r\n//         >\r\n//           <option value=\"\">Select Category</option>\r\n//           {categories.map((cat) => (\r\n//             <option key={cat._id} value={cat._id}>\r\n//               {cat.name}\r\n//             </option>\r\n//           ))}\r\n//         </select>\r\n//         <div className=\"flex gap-2\">\r\n//           <button\r\n//             type=\"submit\"\r\n//             className=\"bg-blue-500 text-white px-4 py-2 rounded\"\r\n//           >\r\n//             {editingId ? \"Update\" : \"Add Product\"}\r\n//           </button>\r\n//           {editingId && (\r\n//             <button\r\n//               type=\"button\"\r\n//               onClick={() => {\r\n//                 setFormData({\r\n//                   name: \"\",\r\n//                   description: \"\",\r\n//                   imageUrl: \"\",\r\n//                   price: \"\",\r\n//                   category: \"\",\r\n//                 });\r\n//                 setEditingId(null);\r\n//               }}\r\n//               className=\"bg-gray-500 text-white px-4 py-2 rounded\"\r\n//             >\r\n//               Cancel\r\n//             </button>\r\n//           )}\r\n//         </div>\r\n//       </form>\r\n\r\n//       {/* Filter & Search */}\r\n//       <div className=\"mt-6\">\r\n//         <h1 className=\"text-xl font-bold my-6\">Filter by Category</h1>\r\n//         <select\r\n//           onChange={(e) => {\r\n//             setSelectedCategory(e.target.value);\r\n//             setPage(1);\r\n//           }}\r\n//           className=\"border p-2 w-52\"\r\n//         >\r\n//           <option value=\"\">All</option>\r\n//           {categories.map((cat) => (\r\n//             <option key={cat._id} value={cat._id}>\r\n//               {cat.name}\r\n//             </option>\r\n//           ))}\r\n//         </select>\r\n\r\n//         <div className=\"mt-4\">\r\n//           <input\r\n//             type=\"text\"\r\n//             placeholder=\"Search products...\"\r\n//             value={searchQuery}\r\n//             onChange={(e) => {\r\n//               setSearchQuery(e.target.value);\r\n//               setPage(1);\r\n//             }}\r\n//             className=\"border p-2 w-full md:w-1/2\"\r\n//           />\r\n//         </div>\r\n\r\n//         {/* Product List */}\r\n//         <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mt-4\">\r\n//           {products.map((prod) => (\r\n//             <div key={prod._id} className=\"border p-4 rounded shadow\">\r\n//               <img\r\n//                 src={prod.imageUrl}\r\n//                 alt={prod.name}\r\n//                 className=\"h-40 w-full object-cover mb-2\"\r\n//               />\r\n//               <h3 className=\"font-bold\">{prod.name}</h3>\r\n//               <p>{prod.description}</p>\r\n//               <p className=\"text-sm text-gray-600\">${prod.price}</p>\r\n//               <p className=\"text-xs text-gray-400\">{prod.category?.name}</p>\r\n//               <div className=\"flex gap-2 mt-2\">\r\n//                 <button\r\n//                   onClick={() => handleEdit(prod)}\r\n//                   className=\"bg-yellow-500 text-white px-3 py-1 rounded\"\r\n//                 >\r\n//                   Edit\r\n//                 </button>\r\n//                 <button\r\n//                   onClick={() => handleDelete(prod._id)}\r\n//                   className=\"bg-red-500 text-white px-3 py-1 rounded\"\r\n//                 >\r\n//                   Delete\r\n//                 </button>\r\n//               </div>\r\n//             </div>\r\n//           ))}\r\n//         </div>\r\n\r\n//         {/* Pagination */}\r\n//         <div className=\"flex justify-center mt-4 gap-2\">\r\n//           <button\r\n//             disabled={page <= 1}\r\n//             onClick={() => setPage((p) => p - 1)}\r\n//             className=\"px-4 py-2 bg-gray-300 rounded disabled:opacity-50\"\r\n//           >\r\n//             Prev\r\n//           </button>\r\n//           <span className=\"px-4 py-2\">\r\n//             Page {page} of {totalPages}\r\n//           </span>\r\n//           <button\r\n//             disabled={page >= totalPages}\r\n//             onClick={() => setPage((p) => p + 1)}\r\n//             className=\"px-4 py-2 bg-gray-300 rounded disabled:opacity-50\"\r\n//           >\r\n//             Next\r\n//           </button>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Product;\r\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}