{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\Desktop\\\\my-fullstack-app\\\\client\\\\src\\\\Product.jsx\",\n  _s = $RefreshSig$();\n// // ==== React Component (ProductManager.jsx) ====\n// import { useEffect, useState } from \"react\";\n\n// function Product() {\n//   const [products, setProducts] = useState([]);\n//   const [categories, setCategories] = useState([]);\n//   const [selectedCategory, setSelectedCategory] = useState(\"\");\n\n//   const [formData, setFormData] = useState({\n//     name: \"\",\n//     description: \"\",\n//     imageUrl: \"\",\n//     price: \"\",\n//     category: \"\",\n//   });\n\n//   useEffect(() => {\n//     fetch(\"http://localhost:5000/api/products\")\n//       .then((res) => res.json())\n//       .then(setProducts);\n\n//     fetch(\"http://localhost:5000/api/categories\")\n//       .then((res) => res.json())\n//       .then(setCategories);\n//   }, []);\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     const res = await fetch(\"http://localhost:5000/api/products\", {\n//       method: \"POST\",\n//       headers: { \"Content-Type\": \"application/json\" },\n//       body: JSON.stringify(formData),\n//     });\n//     if (res.ok) {\n//       const newProd = await res.json();\n//       setProducts((prev) => [...prev, newProd]);\n//       setFormData({ name: \"\", description: \"\", imageUrl: \"\", price: \"\", category: \"\" });\n//     }\n//   };\n\n//   const handleDelete = async (id) => {\n//     if (!window.confirm(\"Delete this product?\")) return;\n//     await fetch(`http://localhost:5000/api/products/${id}`, { method: \"DELETE\" });\n//     setProducts(products.filter((p) => p._id !== id));\n//   };\n\n//   return (\n//     <div className=\"p-6\">\n//       <h1 className=\"text-xl font-bold\">Add Product</h1>\n//       <form onSubmit={handleSubmit} className=\"space-y-2\">\n//         <input value={formData.name} onChange={(e) => setFormData({ ...formData, name: e.target.value })} placeholder=\"Name\" className=\"border p-2 w-full\" />\n//         <input value={formData.description} onChange={(e) => setFormData({ ...formData, description: e.target.value })} placeholder=\"Description\" className=\"border p-2 w-full\" />\n//         <input value={formData.imageUrl} onChange={(e) => setFormData({ ...formData, imageUrl: e.target.value })} placeholder=\"Image URL\" className=\"border p-2 w-full\" />\n//         <input type=\"number\" value={formData.price} onChange={(e) => setFormData({ ...formData, price: e.target.value })} placeholder=\"Price\" className=\"border p-2 w-full\" />\n//         <select value={formData.category} onChange={(e) => setFormData({ ...formData, category: e.target.value })} className=\"border p-2 w-full\">\n//           <option value=\"\">Select Category</option>\n//           {categories.map((cat) => (\n//             <option key={cat._id} value={cat._id}>{cat.name}</option>\n//           ))}\n//         </select>\n//         <button type=\"submit\" className=\"bg-blue-500 text-white px-4 py-2 rounded\">Add</button>\n//       </form>\n\n//       <div className=\"mt-6\">\n//         <h2 className=\"text-lg font-semibold\">Filter by Category</h2>\n//         <select onChange={(e) => setSelectedCategory(e.target.value)} className=\"border p-2\">\n//           <option value=\"\">All</option>\n//           {categories.map((cat) => (\n//             <option key={cat._id} value={cat._id}>{cat.name}</option>\n//           ))}\n//         </select>\n\n//         <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mt-4\">\n//           {products\n//             .filter(p => !selectedCategory || p.category?._id === selectedCategory)\n//             .map(prod => (\n//               <div key={prod._id} className=\"border p-4 rounded shadow\">\n//                 <img src={prod.imageUrl} alt={prod.name} className=\"h-40 w-full object-cover mb-2\" />\n//                 <h3 className=\"font-bold\">{prod.name}</h3>\n//                 <p>{prod.description}</p>\n//                 <p className=\"text-sm text-gray-600\">${prod.price}</p>\n//                 <p className=\"text-xs text-gray-400\">{prod.category?.name}</p>\n//                 <button onClick={() => handleDelete(prod._id)} className=\"mt-2 bg-red-500 text-white px-3 py-1 rounded\">Delete</button>\n//               </div>\n//             ))}\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default Product;\n\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Product() {\n  _s();\n  const [products, setProducts] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState(\"\");\n  const [editingId, setEditingId] = useState(null);\n  const [formData, setFormData] = useState({\n    name: \"\",\n    description: \"\",\n    imageUrl: \"\",\n    price: \"\",\n    category: \"\"\n  });\n  useEffect(() => {\n    fetch(\"http://localhost:5000/api/products\").then(res => res.json()).then(setProducts);\n    fetch(\"http://localhost:5000/api/categories\").then(res => res.json()).then(setCategories);\n  }, []);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (editingId) {\n      const res = await fetch(`http://localhost:5000/api/products/${editingId}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(formData)\n      });\n      if (res.ok) {\n        const updatedProd = await res.json();\n        setProducts(prev => prev.map(p => p._id === editingId ? updatedProd : p));\n        setEditingId(null);\n      }\n    } else {\n      const res = await fetch(\"http://localhost:5000/api/products\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(formData)\n      });\n      if (res.ok) {\n        const newProd = await res.json();\n        setProducts(prev => [...prev, newProd]);\n      }\n    }\n\n    // Reset form\n    setFormData({\n      name: \"\",\n      description: \"\",\n      imageUrl: \"\",\n      price: \"\",\n      category: \"\"\n    });\n  };\n  const handleDelete = async id => {\n    if (!window.confirm(\"Delete this product?\")) return;\n    await fetch(`http://localhost:5000/api/products/${id}`, {\n      method: \"DELETE\"\n    });\n    setProducts(products.filter(p => p._id !== id));\n  };\n  const handleEdit = prod => {\n    var _prod$category;\n    setFormData({\n      name: prod.name,\n      description: prod.description,\n      imageUrl: prod.imageUrl,\n      price: prod.price,\n      category: ((_prod$category = prod.category) === null || _prod$category === void 0 ? void 0 : _prod$category._id) || \"\"\n    });\n    setEditingId(prod._id);\n    window.scrollTo({\n      top: 0,\n      behavior: \"smooth\"\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-xl font-bold\",\n      children: editingId ? \"Edit Product\" : \"Add Product\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"space-y-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: formData.name,\n        onChange: e => setFormData({\n          ...formData,\n          name: e.target.value\n        }),\n        placeholder: \"Name\",\n        className: \"border p-2 w-full\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: formData.description,\n        onChange: e => setFormData({\n          ...formData,\n          description: e.target.value\n        }),\n        placeholder: \"Description\",\n        className: \"border p-2 w-full\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: formData.imageUrl,\n        onChange: e => setFormData({\n          ...formData,\n          imageUrl: e.target.value\n        }),\n        placeholder: \"Image URL\",\n        className: \"border p-2 w-full\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: formData.price,\n        onChange: e => setFormData({\n          ...formData,\n          price: e.target.value\n        }),\n        placeholder: \"Price\",\n        className: \"border p-2 w-full\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: formData.category,\n        onChange: e => setFormData({\n          ...formData,\n          category: e.target.value\n        }),\n        className: \"border p-2 w-full\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this), categories.map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: cat._id,\n          children: cat.name\n        }, cat._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"bg-blue-500 text-white px-4 py-2 rounded\",\n        children: editingId ? \"Update\" : \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), editingId && /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => {\n          setFormData({\n            name: \"\",\n            description: \"\",\n            imageUrl: \"\",\n            price: \"\",\n            category: \"\"\n          });\n          setEditingId(null);\n        },\n        className: \"ml-2 bg-gray-500 text-white px-4 py-2 rounded\",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-lg font-semibold\",\n        children: \"Filter by Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => setSelectedCategory(e.target.value),\n        className: \"border p-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this), categories.map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: cat._id,\n          children: cat.name\n        }, cat._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-3 gap-4 mt-4\",\n        children: products.filter(p => {\n          var _p$category;\n          return !selectedCategory || ((_p$category = p.category) === null || _p$category === void 0 ? void 0 : _p$category._id) === selectedCategory;\n        }).map(prod => {\n          var _prod$category2;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"border p-4 rounded shadow\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: prod.imageUrl,\n              alt: prod.name,\n              className: \"h-40 w-full object-cover mb-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"font-bold\",\n              children: prod.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: prod.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-gray-600\",\n              children: [\"$\", prod.price]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-xs text-gray-400\",\n              children: (_prod$category2 = prod.category) === null || _prod$category2 === void 0 ? void 0 : _prod$category2.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex gap-2 mt-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleEdit(prod),\n                className: \"bg-yellow-500 text-white px-3 py-1 rounded\",\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDelete(prod._id),\n                className: \"bg-red-500 text-white px-3 py-1 rounded\",\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 17\n            }, this)]\n          }, prod._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 178,\n    columnNumber: 5\n  }, this);\n}\n_s(Product, \"SiKHH1Pbh2LgHAWNqT4oniiJfrw=\");\n_c = Product;\nexport default Product;\nvar _c;\n$RefreshReg$(_c, \"Product\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","Product","_s","products","setProducts","categories","setCategories","selectedCategory","setSelectedCategory","editingId","setEditingId","formData","setFormData","name","description","imageUrl","price","category","fetch","then","res","json","handleSubmit","e","preventDefault","method","headers","body","JSON","stringify","ok","updatedProd","prev","map","p","_id","newProd","handleDelete","id","window","confirm","filter","handleEdit","prod","_prod$category","scrollTo","top","behavior","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","target","placeholder","type","cat","onClick","_p$category","_prod$category2","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/dell/Desktop/my-fullstack-app/client/src/Product.jsx"],"sourcesContent":["\r\n// // ==== React Component (ProductManager.jsx) ====\r\n// import { useEffect, useState } from \"react\";\r\n\r\n// function Product() {\r\n//   const [products, setProducts] = useState([]);\r\n//   const [categories, setCategories] = useState([]);\r\n//   const [selectedCategory, setSelectedCategory] = useState(\"\");\r\n\r\n//   const [formData, setFormData] = useState({\r\n//     name: \"\",\r\n//     description: \"\",\r\n//     imageUrl: \"\",\r\n//     price: \"\",\r\n//     category: \"\",\r\n//   });\r\n\r\n//   useEffect(() => {\r\n//     fetch(\"http://localhost:5000/api/products\")\r\n//       .then((res) => res.json())\r\n//       .then(setProducts);\r\n\r\n//     fetch(\"http://localhost:5000/api/categories\")\r\n//       .then((res) => res.json())\r\n//       .then(setCategories);\r\n//   }, []);\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     const res = await fetch(\"http://localhost:5000/api/products\", {\r\n//       method: \"POST\",\r\n//       headers: { \"Content-Type\": \"application/json\" },\r\n//       body: JSON.stringify(formData),\r\n//     });\r\n//     if (res.ok) {\r\n//       const newProd = await res.json();\r\n//       setProducts((prev) => [...prev, newProd]);\r\n//       setFormData({ name: \"\", description: \"\", imageUrl: \"\", price: \"\", category: \"\" });\r\n//     }\r\n//   };\r\n\r\n//   const handleDelete = async (id) => {\r\n//     if (!window.confirm(\"Delete this product?\")) return;\r\n//     await fetch(`http://localhost:5000/api/products/${id}`, { method: \"DELETE\" });\r\n//     setProducts(products.filter((p) => p._id !== id));\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"p-6\">\r\n//       <h1 className=\"text-xl font-bold\">Add Product</h1>\r\n//       <form onSubmit={handleSubmit} className=\"space-y-2\">\r\n//         <input value={formData.name} onChange={(e) => setFormData({ ...formData, name: e.target.value })} placeholder=\"Name\" className=\"border p-2 w-full\" />\r\n//         <input value={formData.description} onChange={(e) => setFormData({ ...formData, description: e.target.value })} placeholder=\"Description\" className=\"border p-2 w-full\" />\r\n//         <input value={formData.imageUrl} onChange={(e) => setFormData({ ...formData, imageUrl: e.target.value })} placeholder=\"Image URL\" className=\"border p-2 w-full\" />\r\n//         <input type=\"number\" value={formData.price} onChange={(e) => setFormData({ ...formData, price: e.target.value })} placeholder=\"Price\" className=\"border p-2 w-full\" />\r\n//         <select value={formData.category} onChange={(e) => setFormData({ ...formData, category: e.target.value })} className=\"border p-2 w-full\">\r\n//           <option value=\"\">Select Category</option>\r\n//           {categories.map((cat) => (\r\n//             <option key={cat._id} value={cat._id}>{cat.name}</option>\r\n//           ))}\r\n//         </select>\r\n//         <button type=\"submit\" className=\"bg-blue-500 text-white px-4 py-2 rounded\">Add</button>\r\n//       </form>\r\n\r\n//       <div className=\"mt-6\">\r\n//         <h2 className=\"text-lg font-semibold\">Filter by Category</h2>\r\n//         <select onChange={(e) => setSelectedCategory(e.target.value)} className=\"border p-2\">\r\n//           <option value=\"\">All</option>\r\n//           {categories.map((cat) => (\r\n//             <option key={cat._id} value={cat._id}>{cat.name}</option>\r\n//           ))}\r\n//         </select>\r\n\r\n//         <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mt-4\">\r\n//           {products\r\n//             .filter(p => !selectedCategory || p.category?._id === selectedCategory)\r\n//             .map(prod => (\r\n//               <div key={prod._id} className=\"border p-4 rounded shadow\">\r\n//                 <img src={prod.imageUrl} alt={prod.name} className=\"h-40 w-full object-cover mb-2\" />\r\n//                 <h3 className=\"font-bold\">{prod.name}</h3>\r\n//                 <p>{prod.description}</p>\r\n//                 <p className=\"text-sm text-gray-600\">${prod.price}</p>\r\n//                 <p className=\"text-xs text-gray-400\">{prod.category?.name}</p>\r\n//                 <button onClick={() => handleDelete(prod._id)} className=\"mt-2 bg-red-500 text-white px-3 py-1 rounded\">Delete</button>\r\n//               </div>\r\n//             ))}\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Product;\r\n\r\nimport { useEffect, useState } from \"react\";\r\n\r\nfunction Product() {\r\n  const [products, setProducts] = useState([]);\r\n  const [categories, setCategories] = useState([]);\r\n  const [selectedCategory, setSelectedCategory] = useState(\"\");\r\n  const [editingId, setEditingId] = useState(null);\r\n\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    description: \"\",\r\n    imageUrl: \"\",\r\n    price: \"\",\r\n    category: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:5000/api/products\")\r\n      .then((res) => res.json())\r\n      .then(setProducts);\r\n\r\n    fetch(\"http://localhost:5000/api/categories\")\r\n      .then((res) => res.json())\r\n      .then(setCategories);\r\n  }, []);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (editingId) {\r\n      const res = await fetch(`http://localhost:5000/api/products/${editingId}`, {\r\n        method: \"PUT\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(formData),\r\n      });\r\n      if (res.ok) {\r\n        const updatedProd = await res.json();\r\n        setProducts((prev) =>\r\n          prev.map((p) => (p._id === editingId ? updatedProd : p))\r\n        );\r\n        setEditingId(null);\r\n      }\r\n    } else {\r\n      const res = await fetch(\"http://localhost:5000/api/products\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(formData),\r\n      });\r\n      if (res.ok) {\r\n        const newProd = await res.json();\r\n        setProducts((prev) => [...prev, newProd]);\r\n      }\r\n    }\r\n\r\n    // Reset form\r\n    setFormData({\r\n      name: \"\",\r\n      description: \"\",\r\n      imageUrl: \"\",\r\n      price: \"\",\r\n      category: \"\",\r\n    });\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    if (!window.confirm(\"Delete this product?\")) return;\r\n    await fetch(`http://localhost:5000/api/products/${id}`, { method: \"DELETE\" });\r\n    setProducts(products.filter((p) => p._id !== id));\r\n  };\r\n\r\n  const handleEdit = (prod) => {\r\n    setFormData({\r\n      name: prod.name,\r\n      description: prod.description,\r\n      imageUrl: prod.imageUrl,\r\n      price: prod.price,\r\n      category: prod.category?._id || \"\",\r\n    });\r\n    setEditingId(prod._id);\r\n    window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-6\">\r\n      <h1 className=\"text-xl font-bold\">{editingId ? \"Edit Product\" : \"Add Product\"}</h1>\r\n      <form onSubmit={handleSubmit} className=\"space-y-2\">\r\n        <input value={formData.name} onChange={(e) => setFormData({ ...formData, name: e.target.value })} placeholder=\"Name\" className=\"border p-2 w-full\" />\r\n        <input value={formData.description} onChange={(e) => setFormData({ ...formData, description: e.target.value })} placeholder=\"Description\" className=\"border p-2 w-full\" />\r\n        <input value={formData.imageUrl} onChange={(e) => setFormData({ ...formData, imageUrl: e.target.value })} placeholder=\"Image URL\" className=\"border p-2 w-full\" />\r\n        <input type=\"number\" value={formData.price} onChange={(e) => setFormData({ ...formData, price: e.target.value })} placeholder=\"Price\" className=\"border p-2 w-full\" />\r\n        <select value={formData.category} onChange={(e) => setFormData({ ...formData, category: e.target.value })} className=\"border p-2 w-full\">\r\n          <option value=\"\">Select Category</option>\r\n          {categories.map((cat) => (\r\n            <option key={cat._id} value={cat._id}>{cat.name}</option>\r\n          ))}\r\n        </select>\r\n        <button type=\"submit\" className=\"bg-blue-500 text-white px-4 py-2 rounded\">\r\n          {editingId ? \"Update\" : \"Add\"}\r\n        </button>\r\n        {editingId && (\r\n          <button type=\"button\" onClick={() => {\r\n            setFormData({ name: \"\", description: \"\", imageUrl: \"\", price: \"\", category: \"\" });\r\n            setEditingId(null);\r\n          }} className=\"ml-2 bg-gray-500 text-white px-4 py-2 rounded\">\r\n            Cancel\r\n          </button>\r\n        )}\r\n      </form>\r\n\r\n      <div className=\"mt-6\">\r\n        <h2 className=\"text-lg font-semibold\">Filter by Category</h2>\r\n        <select onChange={(e) => setSelectedCategory(e.target.value)} className=\"border p-2\">\r\n          <option value=\"\">All</option>\r\n          {categories.map((cat) => (\r\n            <option key={cat._id} value={cat._id}>{cat.name}</option>\r\n          ))}\r\n        </select>\r\n\r\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mt-4\">\r\n          {products\r\n            .filter(p => !selectedCategory || p.category?._id === selectedCategory)\r\n            .map(prod => (\r\n              <div key={prod._id} className=\"border p-4 rounded shadow\">\r\n                <img src={prod.imageUrl} alt={prod.name} className=\"h-40 w-full object-cover mb-2\" />\r\n                <h3 className=\"font-bold\">{prod.name}</h3>\r\n                <p>{prod.description}</p>\r\n                <p className=\"text-sm text-gray-600\">${prod.price}</p>\r\n                <p className=\"text-xs text-gray-400\">{prod.category?.name}</p>\r\n                <div className=\"flex gap-2 mt-2\">\r\n                  <button onClick={() => handleEdit(prod)} className=\"bg-yellow-500 text-white px-3 py-1 rounded\">Edit</button>\r\n                  <button onClick={() => handleDelete(prod._id)} className=\"bg-red-500 text-white px-3 py-1 rounded\">Delete</button>\r\n                </div>\r\n              </div>\r\n            ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Product;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}