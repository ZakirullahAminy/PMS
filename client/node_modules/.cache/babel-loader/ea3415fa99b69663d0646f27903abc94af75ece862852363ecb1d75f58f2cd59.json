{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\Desktop\\\\my-fullstack-app\\\\client\\\\src\\\\Product.jsx\",\n  _s = $RefreshSig$();\n// import { useEffect, useState } from \"react\";\n\n// function Product() {\n//   const [products, setProducts] = useState([]);\n//   const [categories, setCategories] = useState([]);\n//   const [selectedCategory, setSelectedCategory] = useState(\"\");\n//   const [searchQuery, setSearchQuery] = useState(\"\");\n//   const [editingId, setEditingId] = useState(null);\n//   const [editingCategoryId, setEditingCategoryId] = useState(null);\n//   const [newCategory, setNewCategory] = useState(\"\");\n\n//   const [formData, setFormData] = useState({\n//     name: \"\",\n//     description: \"\",\n//     imageUrl: \"\",\n//     price: \"\",\n//     category: \"\",\n//   });\n\n//   useEffect(() => {\n//     fetch(\"http://localhost:5000/api/products\")\n//       .then((res) => res.json())\n//       .then(setProducts);\n\n//     fetch(\"http://localhost:5000/api/categories\")\n//       .then((res) => res.json())\n//       .then(setCategories);\n//   }, []);\n\n//   const refreshCategories = async () => {\n//     const res = await fetch(\"http://localhost:5000/api/categories\");\n//     const data = await res.json();\n//     setCategories(data);\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     if (editingId) {\n//       const res = await fetch(\n//         `http://localhost:5000/api/products/${editingId}`,\n//         {\n//           method: \"PUT\",\n//           headers: { \"Content-Type\": \"application/json\" },\n//           body: JSON.stringify(formData),\n//         }\n//       );\n//       if (res.ok) {\n//         const updatedProd = await res.json();\n//         setProducts((prev) =>\n//           prev.map((p) => (p._id === editingId ? updatedProd : p))\n//         );\n//         setEditingId(null);\n//       }\n//     } else {\n//       const res = await fetch(\"http://localhost:5000/api/products\", {\n//         method: \"POST\",\n//         headers: { \"Content-Type\": \"application/json\" },\n//         body: JSON.stringify(formData),\n//       });\n//       if (res.ok) {\n//         const newProd = await res.json();\n//         setProducts((prev) => [...prev, newProd]);\n//       }\n//     }\n\n//     setFormData({\n//       name: \"\",\n//       description: \"\",\n//       imageUrl: \"\",\n//       price: \"\",\n//       category: \"\",\n//     });\n//   };\n\n//   const handleDelete = async (id) => {\n//     if (!window.confirm(\"Delete this product?\")) return;\n//     await fetch(`http://localhost:5000/api/products/${id}`, {\n//       method: \"DELETE\",\n//     });\n//     setProducts(products.filter((p) => p._id !== id));\n//   };\n\n//   const handleEdit = (prod) => {\n//     setFormData({\n//       name: prod.name,\n//       description: prod.description,\n//       imageUrl: prod.imageUrl,\n//       price: prod.price,\n//       category: prod.category?._id || \"\",\n//     });\n//     setEditingId(prod._id);\n//     window.scrollTo({ top: 0, behavior: \"smooth\" });\n//   };\n\n//   const handleAddCategory = async (e) => {\n//     e.preventDefault();\n//     if (!newCategory.trim()) return;\n\n//     if (editingCategoryId) {\n//       // Edit existing category\n//       const res = await fetch(\n//         `http://localhost:5000/api/categories/${editingCategoryId}`,\n//         {\n//           method: \"PUT\",\n//           headers: { \"Content-Type\": \"application/json\" },\n//           body: JSON.stringify({ name: newCategory }),\n//         }\n//       );\n//       if (res.ok) {\n//         await refreshCategories();\n//         setNewCategory(\"\");\n//         setEditingCategoryId(null);\n//       }\n//     } else {\n//       // Create new category\n//       const res = await fetch(\"http://localhost:5000/api/categories\", {\n//         method: \"POST\",\n//         headers: { \"Content-Type\": \"application/json\" },\n//         body: JSON.stringify({ name: newCategory }),\n//       });\n\n//       if (res.ok) {\n//         const created = await res.json();\n//         setCategories((prev) => [...prev, created]);\n//         setNewCategory(\"\");\n//       }\n//     }\n//   };\n\n//   const handleEditCategory = (cat) => {\n//     setNewCategory(cat.name);\n//     setEditingCategoryId(cat._id);\n//   };\n\n//   const handleDeleteCategory = async (id) => {\n//     if (!window.confirm(\"Delete this category?\")) return;\n\n//     const res = await fetch(`http://localhost:5000/api/categories/${id}`, {\n//       method: \"DELETE\",\n//     });\n\n//     const data = await res.json();\n\n//     if (res.ok) {\n//       await refreshCategories();\n//     } else {\n//       alert(data.message || \"Could not delete category\");\n//     }\n//   };\n\n//   return (\n//     <div className=\"p-6\">\n//        <h2 className=\"text-lg font-bold mb-2\">PMS</h2>\n//       <div className=\"my-6\">\n//         <h1 className=\"text-xl font-bold\">\n//           {editingCategoryId ? \"Edit Category\" : \"Add New Category\"}\n//         </h1>\n//         <form\n//           onSubmit={handleAddCategory}\n//           className=\"flex flex-col gap-2 items-start mt-2\"\n//         >\n//           <input\n//             value={newCategory}\n//             onChange={(e) => setNewCategory(e.target.value)}\n//             placeholder=\"Category name\"\n//             className=\"border p-2 w-full\"\n//           />\n//           <div className=\"flex gap-2\">\n//             <button\n//               type=\"submit\"\n//               className=\"bg-green-600 text-white px-4 py-2 rounded\"\n//             >\n//               {editingCategoryId ? \"Update\" : \"Add\"}\n//             </button>\n//             {editingCategoryId && (\n//               <button\n//                 type=\"button\"\n//                 onClick={() => {\n//                   setNewCategory(\"\");\n//                   setEditingCategoryId(null);\n//                 }}\n//                 className=\"bg-gray-500 text-white px-4 py-2 rounded\"\n//               >\n//                 Cancel\n//               </button>\n//             )}\n//           </div>\n//         </form>\n//       </div>\n\n//       {/* Category List with Edit/Delete */}\n//       <div className=\"mb-6\">\n//         <h2 className=\"text-lg font-semibold mb-2\">All Categories</h2>\n//         <ul className=\"space-y-1\">\n//           {categories.map((cat) => (\n//             <li key={cat._id} className=\"flex items-center justify-between\">\n//               <span>{cat.name}</span>\n//               <div className=\"flex gap-2\">\n//                 <button\n//                   onClick={() => handleEditCategory(cat)}\n//                   className=\"text-sm bg-yellow-500 text-white px-2 py-1 rounded\"\n//                 >\n//                   Edit\n//                 </button>\n//                 <button\n//                   onClick={() => handleDeleteCategory(cat._id)}\n//                   className=\"text-sm bg-red-500 text-white px-2 py-1 rounded\"\n//                 >\n//                   Delete\n//                 </button>\n//               </div>\n//             </li>\n//           ))}\n//         </ul>\n//       </div>\n\n//       {/* Add and edit Product */}\n//       <h1 className=\"text-xl font-bold\">\n//         {editingId ? \"Edit Product\" : \"Add Product\"}\n//       </h1>\n//       <form onSubmit={handleSubmit} className=\"space-y-2\">\n//         <input\n//           value={formData.name}\n//           onChange={(e) => setFormData({ ...formData, name: e.target.value })}\n//           placeholder=\"Name\"\n//           className=\"border p-2 w-full\"\n//         />\n//         <input\n//           value={formData.description}\n//           onChange={(e) =>\n//             setFormData({ ...formData, description: e.target.value })\n//           }\n//           placeholder=\"Description\"\n//           className=\"border p-2 w-full\"\n//         />\n//         <input\n//           value={formData.imageUrl}\n//           onChange={(e) =>\n//             setFormData({ ...formData, imageUrl: e.target.value })\n//           }\n//           placeholder=\"Image URL\"\n//           className=\"border p-2 w-full\"\n//         />\n//         <input\n//           type=\"number\"\n//           value={formData.price}\n//           onChange={(e) =>\n//             setFormData({ ...formData, price: e.target.value })\n//           }\n//           placeholder=\"Price\"\n//           className=\"border p-2 w-full\"\n//         />\n//         <select\n//           value={formData.category}\n//           onChange={(e) =>\n//             setFormData({ ...formData, category: e.target.value })\n//           }\n//           className=\"border p-2 w-full\"\n//         >\n//           <option value=\"\">Select Category</option>\n//           {categories.map((cat) => (\n//             <option key={cat._id} value={cat._id}>\n//               {cat.name}\n//             </option>\n//           ))}\n//         </select>\n//         <div className=\"flex gap-2\">\n//           <button\n//             type=\"submit\"\n//             className=\"bg-blue-500 text-white px-4 py-2 rounded\"\n//           >\n//             {editingId ? \"Update\" : \"Add Product\"}\n//           </button>\n//           {editingId && (\n//             <button\n//               type=\"button\"\n//               onClick={() => {\n//                 setFormData({\n//                   name: \"\",\n//                   description: \"\",\n//                   imageUrl: \"\",\n//                   price: \"\",\n//                   category: \"\",\n//                 });\n//                 setEditingId(null);\n//               }}\n//               className=\"bg-gray-500 text-white px-4 py-2 rounded\"\n//             >\n//               Cancel\n//             </button>\n//           )}\n//         </div>\n//       </form>\n\n//       {/* Filter and Search */}\n//       <div className=\"mt-6\">\n//         <h1 className=\"text-xl font-bold my-6\">Filter by Category</h1>\n//         <select\n//           onChange={(e) => setSelectedCategory(e.target.value)}\n//           className=\"border p-2 w-52\"\n//         >\n//           <option value=\"\">All</option>\n//           {categories.map((cat) => (\n//             <option key={cat._id} value={cat._id}>\n//               {cat.name}\n//             </option>\n//           ))}\n//         </select>\n\n//         {/* Search */}\n//         <div className=\"mt-4\">\n//           <input\n//             type=\"text\"\n//             placeholder=\"Search products...\"\n//             value={searchQuery}\n//             onChange={(e) => setSearchQuery(e.target.value)}\n//             className=\"border p-2 w-full md:w-1/2\"\n//           />\n//         </div>\n\n//         {/* Product List */}\n//         <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mt-4\">\n//           {products\n//             .filter(\n//               (p) =>\n//                 (!selectedCategory || p.category?._id === selectedCategory) &&\n//                 (p.name.toLowerCase().includes(searchQuery.toLowerCase()) ||\n//                   p.description\n//                     .toLowerCase()\n//                     .includes(searchQuery.toLowerCase()))\n//             )\n//             .map((prod) => (\n//               <div key={prod._id} className=\"border p-4 rounded shadow\">\n//                 <img\n//                   src={prod.imageUrl}\n//                   alt={prod.name}\n//                   className=\"h-40 w-full object-cover mb-2\"\n//                 />\n//                 <h3 className=\"font-bold\">{prod.name}</h3>\n//                 <p>{prod.description}</p>\n//                 <p className=\"text-sm text-gray-600\">${prod.price}</p>\n//                 <p className=\"text-xs text-gray-400\">{prod.category?.name}</p>\n//                 <div className=\"flex gap-2 mt-2\">\n//                   <button\n//                     onClick={() => handleEdit(prod)}\n//                     className=\"bg-yellow-500 text-white px-3 py-1 rounded\"\n//                   >\n//                     Edit\n//                   </button>\n//                   <button\n//                     onClick={() => handleDelete(prod._id)}\n//                     className=\"bg-red-500 text-white px-3 py-1 rounded\"\n//                   >\n//                     Delete\n//                   </button>\n//                 </div>\n//               </div>\n//             ))}\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default Product;\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Product() {\n  _s();\n  const [products, setProducts] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState(\"\");\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  const [editingId, setEditingId] = useState(null);\n  const [editingCategoryId, setEditingCategoryId] = useState(null);\n  const [newCategory, setNewCategory] = useState(\"\");\n  const [formData, setFormData] = useState({\n    name: \"\",\n    description: \"\",\n    imageUrl: \"\",\n    price: \"\",\n    category: \"\"\n  });\n  useEffect(() => {\n    fetch(\"http://localhost:5000/api/categories\").then(res => res.json()).then(setCategories);\n  }, []);\n  useEffect(() => {\n    const url = new URL(\"http://localhost:5000/api/products\");\n    if (selectedCategory) url.searchParams.append(\"category\", selectedCategory);\n    if (searchQuery) url.searchParams.append(\"search\", searchQuery);\n    url.searchParams.append(\"page\", page);\n    url.searchParams.append(\"limit\", 9);\n    fetch(url.toString()).then(res => res.json()).then(data => {\n      setProducts(data.products);\n      setTotalPages(data.totalPages);\n    });\n  }, [selectedCategory, searchQuery, page]);\n  const refreshCategories = async () => {\n    const res = await fetch(\"http://localhost:5000/api/categories\");\n    const data = await res.json();\n    setCategories(data);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const method = editingId ? \"PUT\" : \"POST\";\n    const endpoint = editingId ? `http://localhost:5000/api/products/${editingId}` : \"http://localhost:5000/api/products\";\n    const res = await fetch(endpoint, {\n      method,\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(formData)\n    });\n    if (res.ok) {\n      setFormData({\n        name: \"\",\n        description: \"\",\n        imageUrl: \"\",\n        price: \"\",\n        category: \"\"\n      });\n      setEditingId(null);\n      setPage(1); // refresh to page 1\n      const data = await res.json();\n    }\n  };\n  const handleDelete = async id => {\n    if (!window.confirm(\"Delete this product?\")) return;\n    await fetch(`http://localhost:5000/api/products/${id}`, {\n      method: \"DELETE\"\n    });\n    setProducts(prev => prev.filter(p => p._id !== id));\n  };\n  const handleEdit = prod => {\n    var _prod$category;\n    setFormData({\n      name: prod.name,\n      description: prod.description,\n      imageUrl: prod.imageUrl,\n      price: prod.price,\n      category: ((_prod$category = prod.category) === null || _prod$category === void 0 ? void 0 : _prod$category._id) || \"\"\n    });\n    setEditingId(prod._id);\n    window.scrollTo({\n      top: 0,\n      behavior: \"smooth\"\n    });\n  };\n  const handleAddCategory = async e => {\n    e.preventDefault();\n    if (!newCategory.trim()) return;\n    const method = editingCategoryId ? \"PUT\" : \"POST\";\n    const endpoint = editingCategoryId ? `http://localhost:5000/api/categories/${editingCategoryId}` : \"http://localhost:5000/api/categories\";\n    const res = await fetch(endpoint, {\n      method,\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name: newCategory\n      })\n    });\n    if (res.ok) {\n      await refreshCategories();\n      setNewCategory(\"\");\n      setEditingCategoryId(null);\n    }\n  };\n  const handleDeleteCategory = async id => {\n    if (!window.confirm(\"Delete this category?\")) return;\n    const res = await fetch(`http://localhost:5000/api/categories/${id}`, {\n      method: \"DELETE\"\n    });\n    const data = await res.json();\n    if (res.ok) {\n      await refreshCategories();\n    } else {\n      alert(data.message || \"Could not delete category\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-lg font-bold mb-2\",\n      children: \"PMS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 500,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"my-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-xl font-bold\",\n        children: editingCategoryId ? \"Edit Category\" : \"Add New Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 504,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleAddCategory,\n        className: \"flex flex-col gap-2 items-start mt-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: newCategory,\n          onChange: e => setNewCategory(e.target.value),\n          placeholder: \"Category name\",\n          className: \"border p-2 w-full\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 511,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"bg-green-600 text-white px-4 py-2 rounded\",\n            children: editingCategoryId ? \"Update\" : \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 518,\n            columnNumber: 13\n          }, this), editingCategoryId && /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => {\n              setNewCategory(\"\");\n              setEditingCategoryId(null);\n            },\n            className: \"bg-gray-500 text-white px-4 py-2 rounded\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 525,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 517,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 503,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-lg font-semibold mb-2\",\n        children: \"All Categories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 542,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"space-y-1\",\n        children: categories.map(cat => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"flex items-center justify-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: cat.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 546,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                setNewCategory(cat.name);\n                setEditingCategoryId(cat._id);\n              },\n              className: \"text-sm bg-yellow-500 text-white px-2 py-1 rounded\",\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 548,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDeleteCategory(cat._id),\n              className: \"text-sm bg-red-500 text-white px-2 py-1 rounded\",\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 557,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 547,\n            columnNumber: 15\n          }, this)]\n        }, cat._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 545,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 543,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 541,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-xl font-bold\",\n      children: editingId ? \"Edit Product\" : \"Add Product\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 570,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"space-y-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: formData.name,\n        onChange: e => setFormData({\n          ...formData,\n          name: e.target.value\n        }),\n        placeholder: \"Name\",\n        className: \"border p-2 w-full\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 574,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: formData.description,\n        onChange: e => setFormData({\n          ...formData,\n          description: e.target.value\n        }),\n        placeholder: \"Description\",\n        className: \"border p-2 w-full\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 580,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: formData.imageUrl,\n        onChange: e => setFormData({\n          ...formData,\n          imageUrl: e.target.value\n        }),\n        placeholder: \"Image URL\",\n        className: \"border p-2 w-full\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 588,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: formData.price,\n        onChange: e => setFormData({\n          ...formData,\n          price: e.target.value\n        }),\n        placeholder: \"Price\",\n        className: \"border p-2 w-full\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 596,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: formData.category,\n        onChange: e => setFormData({\n          ...formData,\n          category: e.target.value\n        }),\n        className: \"border p-2 w-full\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 610,\n          columnNumber: 11\n        }, this), categories.map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: cat._id,\n          children: cat.name\n        }, cat._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 612,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 603,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"bg-blue-500 text-white px-4 py-2 rounded\",\n          children: editingId ? \"Update\" : \"Add Product\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 618,\n          columnNumber: 11\n        }, this), editingId && /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => {\n            setFormData({\n              name: \"\",\n              description: \"\",\n              imageUrl: \"\",\n              price: \"\",\n              category: \"\"\n            });\n            setEditingId(null);\n          },\n          className: \"bg-gray-500 text-white px-4 py-2 rounded\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 625,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 617,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 573,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-xl font-bold my-6\",\n        children: \"Filter by Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 647,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => {\n          setSelectedCategory(e.target.value);\n          setPage(1);\n        },\n        className: \"border p-2 w-52\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 655,\n          columnNumber: 11\n        }, this), categories.map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: cat._id,\n          children: cat.name\n        }, cat._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 657,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 648,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search products...\",\n          value: searchQuery,\n          onChange: e => {\n            setSearchQuery(e.target.value);\n            setPage(1);\n          },\n          className: \"border p-2 w-full md:w-1/2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 664,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 663,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-3 gap-4 mt-4\",\n        children: products.map(prod => {\n          var _prod$category2;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"border p-4 rounded shadow\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: prod.imageUrl,\n              alt: prod.name,\n              className: \"h-40 w-full object-cover mb-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 680,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"font-bold\",\n              children: prod.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 685,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: prod.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 686,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-gray-600\",\n              children: [\"$\", prod.price]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 687,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-xs text-gray-400\",\n              children: (_prod$category2 = prod.category) === null || _prod$category2 === void 0 ? void 0 : _prod$category2.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 688,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex gap-2 mt-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleEdit(prod),\n                className: \"bg-yellow-500 text-white px-3 py-1 rounded\",\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 690,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDelete(prod._id),\n                className: \"bg-red-500 text-white px-3 py-1 rounded\",\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 696,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 689,\n              columnNumber: 15\n            }, this)]\n          }, prod._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 679,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 677,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center mt-4 gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: page <= 1,\n          onClick: () => setPage(p => p - 1),\n          className: \"px-4 py-2 bg-gray-300 rounded disabled:opacity-50\",\n          children: \"Prev\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 709,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"px-4 py-2\",\n          children: [\"Page \", page, \" of \", totalPages]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 716,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: page >= totalPages,\n          onClick: () => setPage(p => p + 1),\n          className: \"px-4 py-2 bg-gray-300 rounded disabled:opacity-50\",\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 719,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 708,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 646,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 499,\n    columnNumber: 5\n  }, this);\n}\n_s(Product, \"I8rQbq84gOwtteQ5ae9MQhMQBPE=\");\n_c = Product;\nexport default Product;\nvar _c;\n$RefreshReg$(_c, \"Product\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","Product","_s","products","setProducts","categories","setCategories","selectedCategory","setSelectedCategory","searchQuery","setSearchQuery","page","setPage","totalPages","setTotalPages","editingId","setEditingId","editingCategoryId","setEditingCategoryId","newCategory","setNewCategory","formData","setFormData","name","description","imageUrl","price","category","fetch","then","res","json","url","URL","searchParams","append","toString","data","refreshCategories","handleSubmit","e","preventDefault","method","endpoint","headers","body","JSON","stringify","ok","handleDelete","id","window","confirm","prev","filter","p","_id","handleEdit","prod","_prod$category","scrollTo","top","behavior","handleAddCategory","trim","handleDeleteCategory","alert","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","target","placeholder","type","onClick","map","cat","_prod$category2","src","alt","disabled","_c","$RefreshReg$"],"sources":["C:/Users/dell/Desktop/my-fullstack-app/client/src/Product.jsx"],"sourcesContent":["// import { useEffect, useState } from \"react\";\r\n\r\n// function Product() {\r\n//   const [products, setProducts] = useState([]);\r\n//   const [categories, setCategories] = useState([]);\r\n//   const [selectedCategory, setSelectedCategory] = useState(\"\");\r\n//   const [searchQuery, setSearchQuery] = useState(\"\");\r\n//   const [editingId, setEditingId] = useState(null);\r\n//   const [editingCategoryId, setEditingCategoryId] = useState(null);\r\n//   const [newCategory, setNewCategory] = useState(\"\");\r\n\r\n//   const [formData, setFormData] = useState({\r\n//     name: \"\",\r\n//     description: \"\",\r\n//     imageUrl: \"\",\r\n//     price: \"\",\r\n//     category: \"\",\r\n//   });\r\n\r\n//   useEffect(() => {\r\n//     fetch(\"http://localhost:5000/api/products\")\r\n//       .then((res) => res.json())\r\n//       .then(setProducts);\r\n\r\n//     fetch(\"http://localhost:5000/api/categories\")\r\n//       .then((res) => res.json())\r\n//       .then(setCategories);\r\n//   }, []);\r\n\r\n//   const refreshCategories = async () => {\r\n//     const res = await fetch(\"http://localhost:5000/api/categories\");\r\n//     const data = await res.json();\r\n//     setCategories(data);\r\n//   };\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n\r\n//     if (editingId) {\r\n//       const res = await fetch(\r\n//         `http://localhost:5000/api/products/${editingId}`,\r\n//         {\r\n//           method: \"PUT\",\r\n//           headers: { \"Content-Type\": \"application/json\" },\r\n//           body: JSON.stringify(formData),\r\n//         }\r\n//       );\r\n//       if (res.ok) {\r\n//         const updatedProd = await res.json();\r\n//         setProducts((prev) =>\r\n//           prev.map((p) => (p._id === editingId ? updatedProd : p))\r\n//         );\r\n//         setEditingId(null);\r\n//       }\r\n//     } else {\r\n//       const res = await fetch(\"http://localhost:5000/api/products\", {\r\n//         method: \"POST\",\r\n//         headers: { \"Content-Type\": \"application/json\" },\r\n//         body: JSON.stringify(formData),\r\n//       });\r\n//       if (res.ok) {\r\n//         const newProd = await res.json();\r\n//         setProducts((prev) => [...prev, newProd]);\r\n//       }\r\n//     }\r\n\r\n//     setFormData({\r\n//       name: \"\",\r\n//       description: \"\",\r\n//       imageUrl: \"\",\r\n//       price: \"\",\r\n//       category: \"\",\r\n//     });\r\n//   };\r\n\r\n//   const handleDelete = async (id) => {\r\n//     if (!window.confirm(\"Delete this product?\")) return;\r\n//     await fetch(`http://localhost:5000/api/products/${id}`, {\r\n//       method: \"DELETE\",\r\n//     });\r\n//     setProducts(products.filter((p) => p._id !== id));\r\n//   };\r\n\r\n//   const handleEdit = (prod) => {\r\n//     setFormData({\r\n//       name: prod.name,\r\n//       description: prod.description,\r\n//       imageUrl: prod.imageUrl,\r\n//       price: prod.price,\r\n//       category: prod.category?._id || \"\",\r\n//     });\r\n//     setEditingId(prod._id);\r\n//     window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n//   };\r\n\r\n//   const handleAddCategory = async (e) => {\r\n//     e.preventDefault();\r\n//     if (!newCategory.trim()) return;\r\n\r\n//     if (editingCategoryId) {\r\n//       // Edit existing category\r\n//       const res = await fetch(\r\n//         `http://localhost:5000/api/categories/${editingCategoryId}`,\r\n//         {\r\n//           method: \"PUT\",\r\n//           headers: { \"Content-Type\": \"application/json\" },\r\n//           body: JSON.stringify({ name: newCategory }),\r\n//         }\r\n//       );\r\n//       if (res.ok) {\r\n//         await refreshCategories();\r\n//         setNewCategory(\"\");\r\n//         setEditingCategoryId(null);\r\n//       }\r\n//     } else {\r\n//       // Create new category\r\n//       const res = await fetch(\"http://localhost:5000/api/categories\", {\r\n//         method: \"POST\",\r\n//         headers: { \"Content-Type\": \"application/json\" },\r\n//         body: JSON.stringify({ name: newCategory }),\r\n//       });\r\n\r\n//       if (res.ok) {\r\n//         const created = await res.json();\r\n//         setCategories((prev) => [...prev, created]);\r\n//         setNewCategory(\"\");\r\n//       }\r\n//     }\r\n//   };\r\n\r\n//   const handleEditCategory = (cat) => {\r\n//     setNewCategory(cat.name);\r\n//     setEditingCategoryId(cat._id);\r\n//   };\r\n\r\n//   const handleDeleteCategory = async (id) => {\r\n//     if (!window.confirm(\"Delete this category?\")) return;\r\n\r\n//     const res = await fetch(`http://localhost:5000/api/categories/${id}`, {\r\n//       method: \"DELETE\",\r\n//     });\r\n\r\n//     const data = await res.json();\r\n\r\n//     if (res.ok) {\r\n//       await refreshCategories();\r\n//     } else {\r\n//       alert(data.message || \"Could not delete category\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"p-6\">\r\n//        <h2 className=\"text-lg font-bold mb-2\">PMS</h2>\r\n//       <div className=\"my-6\">\r\n//         <h1 className=\"text-xl font-bold\">\r\n//           {editingCategoryId ? \"Edit Category\" : \"Add New Category\"}\r\n//         </h1>\r\n//         <form\r\n//           onSubmit={handleAddCategory}\r\n//           className=\"flex flex-col gap-2 items-start mt-2\"\r\n//         >\r\n//           <input\r\n//             value={newCategory}\r\n//             onChange={(e) => setNewCategory(e.target.value)}\r\n//             placeholder=\"Category name\"\r\n//             className=\"border p-2 w-full\"\r\n//           />\r\n//           <div className=\"flex gap-2\">\r\n//             <button\r\n//               type=\"submit\"\r\n//               className=\"bg-green-600 text-white px-4 py-2 rounded\"\r\n//             >\r\n//               {editingCategoryId ? \"Update\" : \"Add\"}\r\n//             </button>\r\n//             {editingCategoryId && (\r\n//               <button\r\n//                 type=\"button\"\r\n//                 onClick={() => {\r\n//                   setNewCategory(\"\");\r\n//                   setEditingCategoryId(null);\r\n//                 }}\r\n//                 className=\"bg-gray-500 text-white px-4 py-2 rounded\"\r\n//               >\r\n//                 Cancel\r\n//               </button>\r\n//             )}\r\n//           </div>\r\n//         </form>\r\n//       </div>\r\n\r\n//       {/* Category List with Edit/Delete */}\r\n//       <div className=\"mb-6\">\r\n//         <h2 className=\"text-lg font-semibold mb-2\">All Categories</h2>\r\n//         <ul className=\"space-y-1\">\r\n//           {categories.map((cat) => (\r\n//             <li key={cat._id} className=\"flex items-center justify-between\">\r\n//               <span>{cat.name}</span>\r\n//               <div className=\"flex gap-2\">\r\n//                 <button\r\n//                   onClick={() => handleEditCategory(cat)}\r\n//                   className=\"text-sm bg-yellow-500 text-white px-2 py-1 rounded\"\r\n//                 >\r\n//                   Edit\r\n//                 </button>\r\n//                 <button\r\n//                   onClick={() => handleDeleteCategory(cat._id)}\r\n//                   className=\"text-sm bg-red-500 text-white px-2 py-1 rounded\"\r\n//                 >\r\n//                   Delete\r\n//                 </button>\r\n//               </div>\r\n//             </li>\r\n//           ))}\r\n//         </ul>\r\n//       </div>\r\n\r\n//       {/* Add and edit Product */}\r\n//       <h1 className=\"text-xl font-bold\">\r\n//         {editingId ? \"Edit Product\" : \"Add Product\"}\r\n//       </h1>\r\n//       <form onSubmit={handleSubmit} className=\"space-y-2\">\r\n//         <input\r\n//           value={formData.name}\r\n//           onChange={(e) => setFormData({ ...formData, name: e.target.value })}\r\n//           placeholder=\"Name\"\r\n//           className=\"border p-2 w-full\"\r\n//         />\r\n//         <input\r\n//           value={formData.description}\r\n//           onChange={(e) =>\r\n//             setFormData({ ...formData, description: e.target.value })\r\n//           }\r\n//           placeholder=\"Description\"\r\n//           className=\"border p-2 w-full\"\r\n//         />\r\n//         <input\r\n//           value={formData.imageUrl}\r\n//           onChange={(e) =>\r\n//             setFormData({ ...formData, imageUrl: e.target.value })\r\n//           }\r\n//           placeholder=\"Image URL\"\r\n//           className=\"border p-2 w-full\"\r\n//         />\r\n//         <input\r\n//           type=\"number\"\r\n//           value={formData.price}\r\n//           onChange={(e) =>\r\n//             setFormData({ ...formData, price: e.target.value })\r\n//           }\r\n//           placeholder=\"Price\"\r\n//           className=\"border p-2 w-full\"\r\n//         />\r\n//         <select\r\n//           value={formData.category}\r\n//           onChange={(e) =>\r\n//             setFormData({ ...formData, category: e.target.value })\r\n//           }\r\n//           className=\"border p-2 w-full\"\r\n//         >\r\n//           <option value=\"\">Select Category</option>\r\n//           {categories.map((cat) => (\r\n//             <option key={cat._id} value={cat._id}>\r\n//               {cat.name}\r\n//             </option>\r\n//           ))}\r\n//         </select>\r\n//         <div className=\"flex gap-2\">\r\n//           <button\r\n//             type=\"submit\"\r\n//             className=\"bg-blue-500 text-white px-4 py-2 rounded\"\r\n//           >\r\n//             {editingId ? \"Update\" : \"Add Product\"}\r\n//           </button>\r\n//           {editingId && (\r\n//             <button\r\n//               type=\"button\"\r\n//               onClick={() => {\r\n//                 setFormData({\r\n//                   name: \"\",\r\n//                   description: \"\",\r\n//                   imageUrl: \"\",\r\n//                   price: \"\",\r\n//                   category: \"\",\r\n//                 });\r\n//                 setEditingId(null);\r\n//               }}\r\n//               className=\"bg-gray-500 text-white px-4 py-2 rounded\"\r\n//             >\r\n//               Cancel\r\n//             </button>\r\n//           )}\r\n//         </div>\r\n//       </form>\r\n\r\n//       {/* Filter and Search */}\r\n//       <div className=\"mt-6\">\r\n//         <h1 className=\"text-xl font-bold my-6\">Filter by Category</h1>\r\n//         <select\r\n//           onChange={(e) => setSelectedCategory(e.target.value)}\r\n//           className=\"border p-2 w-52\"\r\n//         >\r\n//           <option value=\"\">All</option>\r\n//           {categories.map((cat) => (\r\n//             <option key={cat._id} value={cat._id}>\r\n//               {cat.name}\r\n//             </option>\r\n//           ))}\r\n//         </select>\r\n\r\n//         {/* Search */}\r\n//         <div className=\"mt-4\">\r\n//           <input\r\n//             type=\"text\"\r\n//             placeholder=\"Search products...\"\r\n//             value={searchQuery}\r\n//             onChange={(e) => setSearchQuery(e.target.value)}\r\n//             className=\"border p-2 w-full md:w-1/2\"\r\n//           />\r\n//         </div>\r\n\r\n//         {/* Product List */}\r\n//         <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mt-4\">\r\n//           {products\r\n//             .filter(\r\n//               (p) =>\r\n//                 (!selectedCategory || p.category?._id === selectedCategory) &&\r\n//                 (p.name.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n//                   p.description\r\n//                     .toLowerCase()\r\n//                     .includes(searchQuery.toLowerCase()))\r\n//             )\r\n//             .map((prod) => (\r\n//               <div key={prod._id} className=\"border p-4 rounded shadow\">\r\n//                 <img\r\n//                   src={prod.imageUrl}\r\n//                   alt={prod.name}\r\n//                   className=\"h-40 w-full object-cover mb-2\"\r\n//                 />\r\n//                 <h3 className=\"font-bold\">{prod.name}</h3>\r\n//                 <p>{prod.description}</p>\r\n//                 <p className=\"text-sm text-gray-600\">${prod.price}</p>\r\n//                 <p className=\"text-xs text-gray-400\">{prod.category?.name}</p>\r\n//                 <div className=\"flex gap-2 mt-2\">\r\n//                   <button\r\n//                     onClick={() => handleEdit(prod)}\r\n//                     className=\"bg-yellow-500 text-white px-3 py-1 rounded\"\r\n//                   >\r\n//                     Edit\r\n//                   </button>\r\n//                   <button\r\n//                     onClick={() => handleDelete(prod._id)}\r\n//                     className=\"bg-red-500 text-white px-3 py-1 rounded\"\r\n//                   >\r\n//                     Delete\r\n//                   </button>\r\n//                 </div>\r\n//               </div>\r\n//             ))}\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Product;\r\nimport { useEffect, useState } from \"react\";\r\n\r\nfunction Product() {\r\n  const [products, setProducts] = useState([]);\r\n  const [categories, setCategories] = useState([]);\r\n  const [selectedCategory, setSelectedCategory] = useState(\"\");\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [page, setPage] = useState(1);\r\n  const [totalPages, setTotalPages] = useState(1);\r\n  const [editingId, setEditingId] = useState(null);\r\n  const [editingCategoryId, setEditingCategoryId] = useState(null);\r\n  const [newCategory, setNewCategory] = useState(\"\");\r\n\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    description: \"\",\r\n    imageUrl: \"\",\r\n    price: \"\",\r\n    category: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:5000/api/categories\")\r\n      .then((res) => res.json())\r\n      .then(setCategories);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const url = new URL(\"http://localhost:5000/api/products\");\r\n    if (selectedCategory) url.searchParams.append(\"category\", selectedCategory);\r\n    if (searchQuery) url.searchParams.append(\"search\", searchQuery);\r\n    url.searchParams.append(\"page\", page);\r\n    url.searchParams.append(\"limit\", 9);\r\n\r\n    fetch(url.toString())\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setProducts(data.products);\r\n        setTotalPages(data.totalPages);\r\n      });\r\n  }, [selectedCategory, searchQuery, page]);\r\n\r\n  const refreshCategories = async () => {\r\n    const res = await fetch(\"http://localhost:5000/api/categories\");\r\n    const data = await res.json();\r\n    setCategories(data);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const method = editingId ? \"PUT\" : \"POST\";\r\n    const endpoint = editingId\r\n      ? `http://localhost:5000/api/products/${editingId}`\r\n      : \"http://localhost:5000/api/products\";\r\n\r\n    const res = await fetch(endpoint, {\r\n      method,\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(formData),\r\n    });\r\n\r\n    if (res.ok) {\r\n      setFormData({\r\n        name: \"\",\r\n        description: \"\",\r\n        imageUrl: \"\",\r\n        price: \"\",\r\n        category: \"\",\r\n      });\r\n      setEditingId(null);\r\n      setPage(1); // refresh to page 1\r\n      const data = await res.json();\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    if (!window.confirm(\"Delete this product?\")) return;\r\n    await fetch(`http://localhost:5000/api/products/${id}`, {\r\n      method: \"DELETE\",\r\n    });\r\n    setProducts((prev) => prev.filter((p) => p._id !== id));\r\n  };\r\n\r\n  const handleEdit = (prod) => {\r\n    setFormData({\r\n      name: prod.name,\r\n      description: prod.description,\r\n      imageUrl: prod.imageUrl,\r\n      price: prod.price,\r\n      category: prod.category?._id || \"\",\r\n    });\r\n    setEditingId(prod._id);\r\n    window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n  };\r\n\r\n  const handleAddCategory = async (e) => {\r\n    e.preventDefault();\r\n    if (!newCategory.trim()) return;\r\n\r\n    const method = editingCategoryId ? \"PUT\" : \"POST\";\r\n    const endpoint = editingCategoryId\r\n      ? `http://localhost:5000/api/categories/${editingCategoryId}`\r\n      : \"http://localhost:5000/api/categories\";\r\n\r\n    const res = await fetch(endpoint, {\r\n      method,\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ name: newCategory }),\r\n    });\r\n\r\n    if (res.ok) {\r\n      await refreshCategories();\r\n      setNewCategory(\"\");\r\n      setEditingCategoryId(null);\r\n    }\r\n  };\r\n\r\n  const handleDeleteCategory = async (id) => {\r\n    if (!window.confirm(\"Delete this category?\")) return;\r\n    const res = await fetch(`http://localhost:5000/api/categories/${id}`, {\r\n      method: \"DELETE\",\r\n    });\r\n\r\n    const data = await res.json();\r\n    if (res.ok) {\r\n      await refreshCategories();\r\n    } else {\r\n      alert(data.message || \"Could not delete category\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-6\">\r\n      <h2 className=\"text-lg font-bold mb-2\">PMS</h2>\r\n\r\n      {/* Add/Edit Category */}\r\n      <div className=\"my-6\">\r\n        <h1 className=\"text-xl font-bold\">\r\n          {editingCategoryId ? \"Edit Category\" : \"Add New Category\"}\r\n        </h1>\r\n        <form\r\n          onSubmit={handleAddCategory}\r\n          className=\"flex flex-col gap-2 items-start mt-2\"\r\n        >\r\n          <input\r\n            value={newCategory}\r\n            onChange={(e) => setNewCategory(e.target.value)}\r\n            placeholder=\"Category name\"\r\n            className=\"border p-2 w-full\"\r\n          />\r\n          <div className=\"flex gap-2\">\r\n            <button\r\n              type=\"submit\"\r\n              className=\"bg-green-600 text-white px-4 py-2 rounded\"\r\n            >\r\n              {editingCategoryId ? \"Update\" : \"Add\"}\r\n            </button>\r\n            {editingCategoryId && (\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  setNewCategory(\"\");\r\n                  setEditingCategoryId(null);\r\n                }}\r\n                className=\"bg-gray-500 text-white px-4 py-2 rounded\"\r\n              >\r\n                Cancel\r\n              </button>\r\n            )}\r\n          </div>\r\n        </form>\r\n      </div>\r\n\r\n      {/* Category List */}\r\n      <div className=\"mb-6\">\r\n        <h2 className=\"text-lg font-semibold mb-2\">All Categories</h2>\r\n        <ul className=\"space-y-1\">\r\n          {categories.map((cat) => (\r\n            <li key={cat._id} className=\"flex items-center justify-between\">\r\n              <span>{cat.name}</span>\r\n              <div className=\"flex gap-2\">\r\n                <button\r\n                  onClick={() => {\r\n                    setNewCategory(cat.name);\r\n                    setEditingCategoryId(cat._id);\r\n                  }}\r\n                  className=\"text-sm bg-yellow-500 text-white px-2 py-1 rounded\"\r\n                >\r\n                  Edit\r\n                </button>\r\n                <button\r\n                  onClick={() => handleDeleteCategory(cat._id)}\r\n                  className=\"text-sm bg-red-500 text-white px-2 py-1 rounded\"\r\n                >\r\n                  Delete\r\n                </button>\r\n              </div>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n\r\n      {/* Add/Edit Product */}\r\n      <h1 className=\"text-xl font-bold\">\r\n        {editingId ? \"Edit Product\" : \"Add Product\"}\r\n      </h1>\r\n      <form onSubmit={handleSubmit} className=\"space-y-2\">\r\n        <input\r\n          value={formData.name}\r\n          onChange={(e) => setFormData({ ...formData, name: e.target.value })}\r\n          placeholder=\"Name\"\r\n          className=\"border p-2 w-full\"\r\n        />\r\n        <input\r\n          value={formData.description}\r\n          onChange={(e) =>\r\n            setFormData({ ...formData, description: e.target.value })\r\n          }\r\n          placeholder=\"Description\"\r\n          className=\"border p-2 w-full\"\r\n        />\r\n        <input\r\n          value={formData.imageUrl}\r\n          onChange={(e) =>\r\n            setFormData({ ...formData, imageUrl: e.target.value })\r\n          }\r\n          placeholder=\"Image URL\"\r\n          className=\"border p-2 w-full\"\r\n        />\r\n        <input\r\n          type=\"number\"\r\n          value={formData.price}\r\n          onChange={(e) => setFormData({ ...formData, price: e.target.value })}\r\n          placeholder=\"Price\"\r\n          className=\"border p-2 w-full\"\r\n        />\r\n        <select\r\n          value={formData.category}\r\n          onChange={(e) =>\r\n            setFormData({ ...formData, category: e.target.value })\r\n          }\r\n          className=\"border p-2 w-full\"\r\n        >\r\n          <option value=\"\">Select Category</option>\r\n          {categories.map((cat) => (\r\n            <option key={cat._id} value={cat._id}>\r\n              {cat.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <div className=\"flex gap-2\">\r\n          <button\r\n            type=\"submit\"\r\n            className=\"bg-blue-500 text-white px-4 py-2 rounded\"\r\n          >\r\n            {editingId ? \"Update\" : \"Add Product\"}\r\n          </button>\r\n          {editingId && (\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => {\r\n                setFormData({\r\n                  name: \"\",\r\n                  description: \"\",\r\n                  imageUrl: \"\",\r\n                  price: \"\",\r\n                  category: \"\",\r\n                });\r\n                setEditingId(null);\r\n              }}\r\n              className=\"bg-gray-500 text-white px-4 py-2 rounded\"\r\n            >\r\n              Cancel\r\n            </button>\r\n          )}\r\n        </div>\r\n      </form>\r\n\r\n      {/* Filter & Search */}\r\n      <div className=\"mt-6\">\r\n        <h1 className=\"text-xl font-bold my-6\">Filter by Category</h1>\r\n        <select\r\n          onChange={(e) => {\r\n            setSelectedCategory(e.target.value);\r\n            setPage(1);\r\n          }}\r\n          className=\"border p-2 w-52\"\r\n        >\r\n          <option value=\"\">All</option>\r\n          {categories.map((cat) => (\r\n            <option key={cat._id} value={cat._id}>\r\n              {cat.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n\r\n        <div className=\"mt-4\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search products...\"\r\n            value={searchQuery}\r\n            onChange={(e) => {\r\n              setSearchQuery(e.target.value);\r\n              setPage(1);\r\n            }}\r\n            className=\"border p-2 w-full md:w-1/2\"\r\n          />\r\n        </div>\r\n\r\n        {/* Product List */}\r\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mt-4\">\r\n          {products.map((prod) => (\r\n            <div key={prod._id} className=\"border p-4 rounded shadow\">\r\n              <img\r\n                src={prod.imageUrl}\r\n                alt={prod.name}\r\n                className=\"h-40 w-full object-cover mb-2\"\r\n              />\r\n              <h3 className=\"font-bold\">{prod.name}</h3>\r\n              <p>{prod.description}</p>\r\n              <p className=\"text-sm text-gray-600\">${prod.price}</p>\r\n              <p className=\"text-xs text-gray-400\">{prod.category?.name}</p>\r\n              <div className=\"flex gap-2 mt-2\">\r\n                <button\r\n                  onClick={() => handleEdit(prod)}\r\n                  className=\"bg-yellow-500 text-white px-3 py-1 rounded\"\r\n                >\r\n                  Edit\r\n                </button>\r\n                <button\r\n                  onClick={() => handleDelete(prod._id)}\r\n                  className=\"bg-red-500 text-white px-3 py-1 rounded\"\r\n                >\r\n                  Delete\r\n                </button>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        {/* Pagination */}\r\n        <div className=\"flex justify-center mt-4 gap-2\">\r\n          <button\r\n            disabled={page <= 1}\r\n            onClick={() => setPage((p) => p - 1)}\r\n            className=\"px-4 py-2 bg-gray-300 rounded disabled:opacity-50\"\r\n          >\r\n            Prev\r\n          </button>\r\n          <span className=\"px-4 py-2\">\r\n            Page {page} of {totalPages}\r\n          </span>\r\n          <button\r\n            disabled={page >= totalPages}\r\n            onClick={() => setPage((p) => p + 1)}\r\n            className=\"px-4 py-2 bg-gray-300 rounded disabled:opacity-50\"\r\n          >\r\n            Next\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Product;\r\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}