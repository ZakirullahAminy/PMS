{"ast":null,"code":"// import { useEffect, useState } from \"react\";\n// import AOS from \"aos\";\n// import \"aos/dist/aos.css\";\n\n// function Product({ user }) {\n//   useEffect(() => {\n//     AOS.init({\n//       duration: 800,\n//       easing: \"ease-in-out\",\n//       once: false,\n//     });\n//   }, []);\n//   const isAdmin = user.role === \"admin\";\n\n//   const [products, setProducts] = useState([]);\n//   const [categories, setCategories] = useState([]);\n//   const [selectedCategory, setSelectedCategory] = useState(\"\");\n//   const [searchQuery, setSearchQuery] = useState(\"\");\n//   const [page, setPage] = useState(1);\n//   const [totalPages, setTotalPages] = useState(1);\n//   const [editingId, setEditingId] = useState(null);\n//   const [editingCategoryId, setEditingCategoryId] = useState(null);\n//   const [newCategory, setNewCategory] = useState(\"\");\n//   const [oldPassword, setOldPassword] = useState(\"\");\n//   const [newPassword, setNewPassword] = useState(\"\");\n//   const [showPasswordForm, setShowPasswordForm] = useState(false);\n\n//   const [formData, setFormData] = useState({\n//     name: \"\",\n//     description: \"\",\n//     imageUrl: \"\",\n//     price: \"\",\n//     category: \"\",\n//   });\n\n//   useEffect(() => {\n//     fetch(\"http://localhost:5000/api/categories\")\n//       .then((res) => res.json())\n//       .then(setCategories);\n//   }, []);\n\n//   useEffect(() => {\n//     const url = new URL(\"http://localhost:5000/api/products\");\n//     if (selectedCategory) url.searchParams.append(\"category\", selectedCategory);\n//     if (searchQuery) url.searchParams.append(\"search\", searchQuery);\n//     url.searchParams.append(\"page\", page);\n//     url.searchParams.append(\"limit\", 9);\n\n//     fetch(url.toString())\n//       .then((res) => res.json())\n//       .then((data) => {\n//         setProducts(data.products);\n//         setTotalPages(data.totalPages);\n//       });\n//   }, [selectedCategory, searchQuery, page]);\n\n//   const refreshCategories = async () => {\n//     const res = await fetch(\"http://localhost:5000/api/categories\");\n//     const data = await res.json();\n//     setCategories(data);\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     const method = editingId ? \"PUT\" : \"POST\";\n//     const endpoint = editingId\n//       ? `http://localhost:5000/api/products/${editingId}`\n//       : \"http://localhost:5000/api/products\";\n\n//     const res = await fetch(endpoint, {\n//       method,\n//       headers: { \"Content-Type\": \"application/json\" },\n//       body: JSON.stringify(formData),\n//     });\n\n//     if (res.ok) {\n//       setFormData({\n//         name: \"\",\n//         description: \"\",\n//         imageUrl: \"\",\n//         price: \"\",\n//         category: \"\",\n//       });\n//       setEditingId(null);\n//       setPage(1);\n//     }\n//   };\n\n//   const handleDelete = async (id) => {\n//     if (!window.confirm(\"Delete this product?\")) return;\n//     await fetch(`http://localhost:5000/api/products/${id}`, {\n//       method: \"DELETE\",\n//     });\n//     setProducts((prev) => prev.filter((p) => p._id !== id));\n//   };\n\n//   const handleEdit = (prod) => {\n//     setFormData({\n//       name: prod.name,\n//       description: prod.description,\n//       imageUrl: prod.imageUrl,\n//       price: prod.price,\n//       category: prod.category?._id || \"\",\n//     });\n//     setEditingId(prod._id);\n//     window.scrollTo({ top: 0, behavior: \"smooth\" });\n//   };\n\n//   const handleAddCategory = async (e) => {\n//     e.preventDefault();\n//     if (!newCategory.trim()) return;\n\n//     const method = editingCategoryId ? \"PUT\" : \"POST\";\n//     const endpoint = editingCategoryId\n//       ? `http://localhost:5000/api/categories/${editingCategoryId}`\n//       : \"http://localhost:5000/api/categories\";\n\n//     const res = await fetch(endpoint, {\n//       method,\n//       headers: { \"Content-Type\": \"application/json\" },\n//       body: JSON.stringify({ name: newCategory }),\n//     });\n\n//     if (res.ok) {\n//       await refreshCategories();\n//       setNewCategory(\"\");\n//       setEditingCategoryId(null);\n//     }\n//   };\n\n//   const handleDeleteCategory = async (id) => {\n//     if (!window.confirm(\"Delete this category?\")) return;\n//     const res = await fetch(`http://localhost:5000/api/categories/${id}`, {\n//       method: \"DELETE\",\n//     });\n\n//     const data = await res.json();\n//     if (res.ok) {\n//       await refreshCategories();\n//     } else {\n//       alert(data.message || \"Could not delete category\");\n//     }\n//   };\n\n//   return (\n//     <div className=\"p-6 bg-gradient-to-br from-gray-50 to-gray-100 min-h-screen\">\n//       {/* Header with AOS animation */}\n//       <div\n//         data-aos=\"fade-down\"\n//         data-aos-duration=\"500\"\n//         className=\"flex justify-between items-center mb-8 p-6 bg-white rounded-xl shadow-md hover:shadow-lg transition-shadow\"\n//       >\n//         <h2 className=\"text-2xl font-bold text-gray-800\">\n//           Welcome, <span className=\"text-blue-600\">{user.username}</span>\n//           <span className=\"text-xs ml-2 bg-gradient-to-r from-blue-100 to-blue-200 text-blue-800 px-3 py-1 rounded-full uppercase tracking-wider\">\n//             {user.role}\n//           </span>\n//         </h2>\n\n//         <button\n//           onClick={() => window.location.reload()}\n//           className=\"flex items-center gap-1 text-red-500 hover:text-red-700 font-medium transition-all hover:gap-2\"\n//         >\n//           Logout <span className=\"text-lg\">‚Üí</span>\n//         </button>\n//       </div>\n\n//       {isAdmin && (\n//         <div className=\"space-y-8\">\n//           {/* Category Section */}\n//           <div\n//             data-aos=\"fade-up\"\n//             data-aos-delay=\"100\"\n//             className=\"bg-white p-6 rounded-xl shadow-md border border-gray-100 hover:border-blue-100 transition-all\"\n//           >\n//             <h1 className=\"text-2xl font-bold text-gray-800 mb-6 flex items-center gap-2\">\n//               {editingCategoryId ? (\n//                 <span className=\"text-yellow-500\">‚úèÔ∏è</span>\n//               ) : (\n//                 <span className=\"text-green-500\">‚ûï</span>\n//               )}\n//               {editingCategoryId ? \"Edit Category\" : \"Add New Category\"}\n//             </h1>\n//             <form onSubmit={handleAddCategory} className=\"space-y-4\">\n//               <input\n//                 required\n//                 value={newCategory}\n//                 onChange={(e) => setNewCategory(e.target.value)}\n//                 placeholder=\"Category name\"\n//                 className=\"border-2 border-gray-200 p-3 w-full rounded-xl focus:border-blue-500 focus:ring-1 focus:ring-blue-200 focus:outline-none transition-all\"\n//               />\n//               <div className=\"flex gap-3\">\n//                 <button\n//                   type=\"submit\"\n//                   className=\"bg-gradient-to-r from-green-500 to-green-600 text-white px-6 py-3 rounded-xl hover:shadow-lg transition-all hover:from-green-600 hover:to-green-700\"\n//                 >\n//                   {editingCategoryId ? \"Update\" : \"Add\"}\n//                 </button>\n//                 {editingCategoryId && (\n//                   <button\n//                     type=\"button\"\n//                     onClick={() => {\n//                       setNewCategory(\"\");\n//                       setEditingCategoryId(null);\n//                     }}\n//                     className=\"bg-gradient-to-r from-gray-500 to-gray-600 text-white px-6 py-3 rounded-xl hover:shadow-md transition-all\"\n//                   >\n//                     Cancel\n//                   </button>\n//                 )}\n//               </div>\n//             </form>\n//           </div>\n\n//           {/* Category List */}\n//           <div\n//             data-aos=\"fade-up\"\n//             data-aos-delay=\"200\"\n//             className=\"bg-white p-6 rounded-xl shadow-md border border-gray-100\"\n//           >\n//             <h2 className=\"text-xl font-semibold text-gray-800 mb-6 flex items-center gap-2\">\n//               <span className=\"text-blue-500\">üì¶</span> All Categories\n//             </h2>\n//             <ul className=\"divide-y divide-gray-200\">\n//               {categories.map((cat, index) => (\n//                 <li\n//                   key={cat._id}\n//                   data-aos=\"fade-right\"\n//                   data-aos-delay={300 + index * 50}\n//                   className=\"py-4 flex items-center justify-between hover:bg-gray-50 px-3 rounded-lg transition-colors\"\n//                 >\n//                   <span className=\"font-medium text-gray-700\">{cat.name}</span>\n//                   <div className=\"flex gap-2\">\n//                     <button\n//                       onClick={() => {\n//                         setNewCategory(cat.name);\n//                         setEditingCategoryId(cat._id);\n//                       }}\n//                       className=\"bg-gradient-to-r from-yellow-400 to-yellow-500 hover:from-yellow-500 hover:to-yellow-600 text-white px-4 py-2 rounded-lg text-sm transition-all shadow-sm hover:shadow-md\"\n//                     >\n//                       Edit\n//                     </button>\n//                     <button\n//                       onClick={() => handleDeleteCategory(cat._id)}\n//                       className=\"bg-gradient-to-r from-red-400 to-red-500 hover:from-red-500 hover:to-red-600 text-white px-4 py-2 rounded-lg text-sm transition-all shadow-sm hover:shadow-md\"\n//                     >\n//                       Delete\n//                     </button>\n//                   </div>\n//                 </li>\n//               ))}\n//             </ul>\n//           </div>\n\n//           {/* Product Form */}\n//           <div\n//             data-aos=\"fade-up\"\n//             data-aos-delay=\"300\"\n//             className=\"bg-white p-6 rounded-xl shadow-md border border-gray-100\"\n//           >\n//             <h1 className=\"text-2xl font-bold text-gray-800 mb-6 flex items-center gap-2\">\n//               {editingId ? (\n//                 <span className=\"text-yellow-500\">‚úèÔ∏è</span>\n//               ) : (\n//                 <span className=\"text-blue-500\">‚ûï</span>\n//               )}\n//               {editingId ? \"Edit Product\" : \"Add Product\"}\n//             </h1>\n//             <form onSubmit={handleSubmit} className=\"space-y-4\">\n//               <input\n//                 required\n//                 value={formData.name}\n//                 onChange={(e) =>\n//                   setFormData({ ...formData, name: e.target.value })\n//                 }\n//                 placeholder=\"Name\"\n//                 className=\"border-2 border-gray-200 p-3 w-full rounded-xl focus:border-blue-500 focus:ring-1 focus:ring-blue-200 focus:outline-none transition-all\"\n//               />\n//               <input\n//                 required\n//                 value={formData.description}\n//                 onChange={(e) =>\n//                   setFormData({ ...formData, description: e.target.value })\n//                 }\n//                 placeholder=\"Description\"\n//                 className=\"border-2 border-gray-200 p-3 w-full rounded-xl focus:border-blue-500 focus:ring-1 focus:ring-blue-200 focus:outline-none transition-all\"\n//               />\n//               <input\n//                 required\n//                 value={formData.imageUrl}\n//                 onChange={(e) =>\n//                   setFormData({ ...formData, imageUrl: e.target.value })\n//                 }\n//                 placeholder=\"Image URL\"\n//                 className=\"border-2 border-gray-200 p-3 w-full rounded-xl focus:border-blue-500 focus:ring-1 focus:ring-blue-200 focus:outline-none transition-all\"\n//               />\n//               <input\n//                 required\n//                 type=\"number\"\n//                 value={formData.price}\n//                 onChange={(e) =>\n//                   setFormData({ ...formData, price: e.target.value })\n//                 }\n//                 placeholder=\"Price\"\n//                 className=\"border-2 border-gray-200 p-3 w-full rounded-xl focus:border-blue-500 focus:ring-1 focus:ring-blue-200 focus:outline-none transition-all\"\n//               />\n//               <select\n//                 required\n//                 value={formData.category}\n//                 onChange={(e) =>\n//                   setFormData({ ...formData, category: e.target.value })\n//                 }\n//                 className=\"border-2 border-gray-200 p-3 w-full rounded-xl focus:border-blue-500 focus:ring-1 focus:ring-blue-200 focus:outline-none transition-all\"\n//               >\n//                 <option value=\"\">Select Category</option>\n//                 {categories.map((cat) => (\n//                   <option key={cat._id} value={cat._id}>\n//                     {cat.name}\n//                   </option>\n//                 ))}\n//               </select>\n//               <div className=\"flex gap-3\">\n//                 <button\n//                   type=\"submit\"\n//                   className=\"bg-gradient-to-r from-blue-500 to-blue-600 text-white px-6 py-3 rounded-xl hover:shadow-lg transition-all hover:from-blue-600 hover:to-blue-700\"\n//                 >\n//                   {editingId ? \"Update\" : \"Add Product\"}\n//                 </button>\n//                 {editingId && (\n//                   <button\n//                     type=\"button\"\n//                     onClick={() => {\n//                       setFormData({\n//                         name: \"\",\n//                         description: \"\",\n//                         imageUrl: \"\",\n//                         price: \"\",\n//                         category: \"\",\n//                       });\n//                       setEditingId(null);\n//                     }}\n//                     className=\"bg-gradient-to-r from-gray-500 to-gray-600 text-white px-6 py-3 rounded-xl hover:shadow-md transition-all\"\n//                   >\n//                     Cancel\n//                   </button>\n//                 )}\n//               </div>\n//             </form>\n//           </div>\n//         </div>\n//       )}\n\n//       {/* Search & Filter */}\n//       <div\n//         data-aos=\"fade-up\"\n//         className=\"mt-8 bg-white p-6 rounded-xl shadow-md border border-gray-100\"\n//       >\n//         <h1 className=\"text-2xl font-bold text-gray-800 mb-6 flex items-center gap-2\">\n//           <span className=\"text-purple-500\">üîç</span> Filter Products\n//         </h1>\n//         <div className=\"flex flex-col md:flex-row gap-4\">\n//           <select\n//             onChange={(e) => {\n//               setSelectedCategory(e.target.value);\n//               setPage(1);\n//             }}\n//             className=\"border-2 border-gray-200 p-3 rounded-xl focus:border-blue-500 focus:ring-1 focus:ring-blue-200 focus:outline-none transition-all w-full md:w-64\"\n//           >\n//             <option value=\"\">All Categories</option>\n//             {categories.map((cat) => (\n//               <option key={cat._id} value={cat._id}>\n//                 {cat.name}\n//               </option>\n//             ))}\n//           </select>\n//           <input\n//             required\n//             type=\"text\"\n//             placeholder=\"Search products...\"\n//             value={searchQuery}\n//             onChange={(e) => {\n//               setSearchQuery(e.target.value);\n//               setPage(1);\n//             }}\n//             className=\"border-2 border-gray-200 p-3 rounded-xl focus:border-blue-500 focus:ring-1 focus:ring-blue-200 focus:outline-none transition-all w-full\"\n//           />\n//         </div>\n\n//         {/* Product Grid */}\n//         <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 mt-8\">\n//           {products.map((prod, index) => (\n//             <div\n//               key={prod._id}\n//               data-aos=\"fade-up\"\n//               data-aos-delay={index * 100}\n//               className=\"border-2 border-gray-200 rounded-xl overflow-hidden hover:shadow-lg transition-all hover:border-blue-200 hover:-translate-y-1\"\n//             >\n//               <div className=\"h-48 w-full overflow-hidden\">\n//                 <img\n//                   src={prod.imageUrl}\n//                   alt={prod.name}\n//                   className=\"h-full w-full object-cover hover:scale-105 transition-transform duration-500\"\n//                 />\n//               </div>\n//               <div className=\"p-5\">\n//                 <h3 className=\"font-bold text-lg text-gray-800 mb-1\">\n//                   {prod.name}\n//                 </h3>\n//                 <p className=\"text-gray-600 text-sm mb-3 line-clamp-2\">\n//                   {prod.description}\n//                 </p>\n//                 <div className=\"flex justify-between items-center\">\n//                   <p className=\"text-blue-600 font-bold text-lg\">\n//                     ${prod.price}\n//                   </p>\n//                   <span className=\"inline-block bg-gradient-to-r from-blue-100 to-blue-200 text-blue-800 text-xs px-3 py-1 rounded-full\">\n//                     {prod.category?.name}\n//                   </span>\n//                 </div>\n//                 {isAdmin && (\n//                   <div className=\"flex gap-2 mt-4\">\n//                     <button\n//                       onClick={() => handleEdit(prod)}\n//                       className=\"bg-gradient-to-r from-yellow-400 to-yellow-500 hover:from-yellow-500 hover:to-yellow-600 text-white px-4 py-2 rounded-lg text-sm transition-all\"\n//                     >\n//                       Edit\n//                     </button>\n//                     <button\n//                       onClick={() => handleDelete(prod._id)}\n//                       className=\"bg-gradient-to-r from-red-400 to-red-500 hover:from-red-500 hover:to-red-600 text-white px-4 py-2 rounded-lg text-sm transition-all\"\n//                     >\n//                       Delete\n//                     </button>\n//                   </div>\n//                 )}\n//               </div>\n//             </div>\n//           ))}\n//         </div>\n\n//         {/* Pagination */}\n//         <div className=\"flex justify-center mt-8 gap-2\">\n//           <button\n//             disabled={page <= 1}\n//             onClick={() => setPage((p) => p - 1)}\n//             className=\"px-5 py-2 bg-gray-200 hover:bg-gray-300 rounded-lg disabled:opacity-50 transition-all flex items-center gap-1 hover:gap-2\"\n//           >\n//             ‚Üê <span>Prev</span>\n//           </button>\n//           <span className=\"px-5 py-2 text-gray-700 bg-gray-100 rounded-lg\">\n//             Page {page} of {totalPages}\n//           </span>\n//           <button\n//             disabled={page >= totalPages}\n//             onClick={() => setPage((p) => p + 1)}\n//             className=\"px-5 py-2 bg-gray-200 hover:bg-gray-300 rounded-lg disabled:opacity-50 transition-all flex items-center gap-1 hover:gap-2\"\n//           >\n//             <span>Next</span> ‚Üí\n//           </button>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default Product;","map":{"version":3,"names":[],"sources":["C:/Users/dell/Desktop/my-fullstack-app/client/src/Product.jsx"],"sourcesContent":["// import { useEffect, useState } from \"react\";\r\n// import AOS from \"aos\";\r\n// import \"aos/dist/aos.css\";\r\n\r\n// function Product({ user }) {\r\n//   useEffect(() => {\r\n//     AOS.init({\r\n//       duration: 800,\r\n//       easing: \"ease-in-out\",\r\n//       once: false,\r\n//     });\r\n//   }, []);\r\n//   const isAdmin = user.role === \"admin\";\r\n\r\n//   const [products, setProducts] = useState([]);\r\n//   const [categories, setCategories] = useState([]);\r\n//   const [selectedCategory, setSelectedCategory] = useState(\"\");\r\n//   const [searchQuery, setSearchQuery] = useState(\"\");\r\n//   const [page, setPage] = useState(1);\r\n//   const [totalPages, setTotalPages] = useState(1);\r\n//   const [editingId, setEditingId] = useState(null);\r\n//   const [editingCategoryId, setEditingCategoryId] = useState(null);\r\n//   const [newCategory, setNewCategory] = useState(\"\");\r\n//   const [oldPassword, setOldPassword] = useState(\"\");\r\n//   const [newPassword, setNewPassword] = useState(\"\");\r\n//   const [showPasswordForm, setShowPasswordForm] = useState(false);\r\n\r\n//   const [formData, setFormData] = useState({\r\n//     name: \"\",\r\n//     description: \"\",\r\n//     imageUrl: \"\",\r\n//     price: \"\",\r\n//     category: \"\",\r\n//   });\r\n\r\n//   useEffect(() => {\r\n//     fetch(\"http://localhost:5000/api/categories\")\r\n//       .then((res) => res.json())\r\n//       .then(setCategories);\r\n//   }, []);\r\n\r\n//   useEffect(() => {\r\n//     const url = new URL(\"http://localhost:5000/api/products\");\r\n//     if (selectedCategory) url.searchParams.append(\"category\", selectedCategory);\r\n//     if (searchQuery) url.searchParams.append(\"search\", searchQuery);\r\n//     url.searchParams.append(\"page\", page);\r\n//     url.searchParams.append(\"limit\", 9);\r\n\r\n//     fetch(url.toString())\r\n//       .then((res) => res.json())\r\n//       .then((data) => {\r\n//         setProducts(data.products);\r\n//         setTotalPages(data.totalPages);\r\n//       });\r\n//   }, [selectedCategory, searchQuery, page]);\r\n\r\n//   const refreshCategories = async () => {\r\n//     const res = await fetch(\"http://localhost:5000/api/categories\");\r\n//     const data = await res.json();\r\n//     setCategories(data);\r\n//   };\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     const method = editingId ? \"PUT\" : \"POST\";\r\n//     const endpoint = editingId\r\n//       ? `http://localhost:5000/api/products/${editingId}`\r\n//       : \"http://localhost:5000/api/products\";\r\n\r\n//     const res = await fetch(endpoint, {\r\n//       method,\r\n//       headers: { \"Content-Type\": \"application/json\" },\r\n//       body: JSON.stringify(formData),\r\n//     });\r\n\r\n//     if (res.ok) {\r\n//       setFormData({\r\n//         name: \"\",\r\n//         description: \"\",\r\n//         imageUrl: \"\",\r\n//         price: \"\",\r\n//         category: \"\",\r\n//       });\r\n//       setEditingId(null);\r\n//       setPage(1);\r\n//     }\r\n//   };\r\n\r\n//   const handleDelete = async (id) => {\r\n//     if (!window.confirm(\"Delete this product?\")) return;\r\n//     await fetch(`http://localhost:5000/api/products/${id}`, {\r\n//       method: \"DELETE\",\r\n//     });\r\n//     setProducts((prev) => prev.filter((p) => p._id !== id));\r\n//   };\r\n\r\n//   const handleEdit = (prod) => {\r\n//     setFormData({\r\n//       name: prod.name,\r\n//       description: prod.description,\r\n//       imageUrl: prod.imageUrl,\r\n//       price: prod.price,\r\n//       category: prod.category?._id || \"\",\r\n//     });\r\n//     setEditingId(prod._id);\r\n//     window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n//   };\r\n\r\n//   const handleAddCategory = async (e) => {\r\n//     e.preventDefault();\r\n//     if (!newCategory.trim()) return;\r\n\r\n//     const method = editingCategoryId ? \"PUT\" : \"POST\";\r\n//     const endpoint = editingCategoryId\r\n//       ? `http://localhost:5000/api/categories/${editingCategoryId}`\r\n//       : \"http://localhost:5000/api/categories\";\r\n\r\n//     const res = await fetch(endpoint, {\r\n//       method,\r\n//       headers: { \"Content-Type\": \"application/json\" },\r\n//       body: JSON.stringify({ name: newCategory }),\r\n//     });\r\n\r\n//     if (res.ok) {\r\n//       await refreshCategories();\r\n//       setNewCategory(\"\");\r\n//       setEditingCategoryId(null);\r\n//     }\r\n//   };\r\n\r\n//   const handleDeleteCategory = async (id) => {\r\n//     if (!window.confirm(\"Delete this category?\")) return;\r\n//     const res = await fetch(`http://localhost:5000/api/categories/${id}`, {\r\n//       method: \"DELETE\",\r\n//     });\r\n\r\n//     const data = await res.json();\r\n//     if (res.ok) {\r\n//       await refreshCategories();\r\n//     } else {\r\n//       alert(data.message || \"Could not delete category\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"p-6 bg-gradient-to-br from-gray-50 to-gray-100 min-h-screen\">\r\n//       {/* Header with AOS animation */}\r\n//       <div\r\n//         data-aos=\"fade-down\"\r\n//         data-aos-duration=\"500\"\r\n//         className=\"flex justify-between items-center mb-8 p-6 bg-white rounded-xl shadow-md hover:shadow-lg transition-shadow\"\r\n//       >\r\n//         <h2 className=\"text-2xl font-bold text-gray-800\">\r\n//           Welcome, <span className=\"text-blue-600\">{user.username}</span>\r\n//           <span className=\"text-xs ml-2 bg-gradient-to-r from-blue-100 to-blue-200 text-blue-800 px-3 py-1 rounded-full uppercase tracking-wider\">\r\n//             {user.role}\r\n//           </span>\r\n//         </h2>\r\n\r\n//         <button\r\n//           onClick={() => window.location.reload()}\r\n//           className=\"flex items-center gap-1 text-red-500 hover:text-red-700 font-medium transition-all hover:gap-2\"\r\n//         >\r\n//           Logout <span className=\"text-lg\">‚Üí</span>\r\n//         </button>\r\n//       </div>\r\n\r\n//       {isAdmin && (\r\n//         <div className=\"space-y-8\">\r\n//           {/* Category Section */}\r\n//           <div\r\n//             data-aos=\"fade-up\"\r\n//             data-aos-delay=\"100\"\r\n//             className=\"bg-white p-6 rounded-xl shadow-md border border-gray-100 hover:border-blue-100 transition-all\"\r\n//           >\r\n//             <h1 className=\"text-2xl font-bold text-gray-800 mb-6 flex items-center gap-2\">\r\n//               {editingCategoryId ? (\r\n//                 <span className=\"text-yellow-500\">‚úèÔ∏è</span>\r\n//               ) : (\r\n//                 <span className=\"text-green-500\">‚ûï</span>\r\n//               )}\r\n//               {editingCategoryId ? \"Edit Category\" : \"Add New Category\"}\r\n//             </h1>\r\n//             <form onSubmit={handleAddCategory} className=\"space-y-4\">\r\n//               <input\r\n//                 required\r\n//                 value={newCategory}\r\n//                 onChange={(e) => setNewCategory(e.target.value)}\r\n//                 placeholder=\"Category name\"\r\n//                 className=\"border-2 border-gray-200 p-3 w-full rounded-xl focus:border-blue-500 focus:ring-1 focus:ring-blue-200 focus:outline-none transition-all\"\r\n//               />\r\n//               <div className=\"flex gap-3\">\r\n//                 <button\r\n//                   type=\"submit\"\r\n//                   className=\"bg-gradient-to-r from-green-500 to-green-600 text-white px-6 py-3 rounded-xl hover:shadow-lg transition-all hover:from-green-600 hover:to-green-700\"\r\n//                 >\r\n//                   {editingCategoryId ? \"Update\" : \"Add\"}\r\n//                 </button>\r\n//                 {editingCategoryId && (\r\n//                   <button\r\n//                     type=\"button\"\r\n//                     onClick={() => {\r\n//                       setNewCategory(\"\");\r\n//                       setEditingCategoryId(null);\r\n//                     }}\r\n//                     className=\"bg-gradient-to-r from-gray-500 to-gray-600 text-white px-6 py-3 rounded-xl hover:shadow-md transition-all\"\r\n//                   >\r\n//                     Cancel\r\n//                   </button>\r\n//                 )}\r\n//               </div>\r\n//             </form>\r\n//           </div>\r\n\r\n//           {/* Category List */}\r\n//           <div\r\n//             data-aos=\"fade-up\"\r\n//             data-aos-delay=\"200\"\r\n//             className=\"bg-white p-6 rounded-xl shadow-md border border-gray-100\"\r\n//           >\r\n//             <h2 className=\"text-xl font-semibold text-gray-800 mb-6 flex items-center gap-2\">\r\n//               <span className=\"text-blue-500\">üì¶</span> All Categories\r\n//             </h2>\r\n//             <ul className=\"divide-y divide-gray-200\">\r\n//               {categories.map((cat, index) => (\r\n//                 <li\r\n//                   key={cat._id}\r\n//                   data-aos=\"fade-right\"\r\n//                   data-aos-delay={300 + index * 50}\r\n//                   className=\"py-4 flex items-center justify-between hover:bg-gray-50 px-3 rounded-lg transition-colors\"\r\n//                 >\r\n//                   <span className=\"font-medium text-gray-700\">{cat.name}</span>\r\n//                   <div className=\"flex gap-2\">\r\n//                     <button\r\n//                       onClick={() => {\r\n//                         setNewCategory(cat.name);\r\n//                         setEditingCategoryId(cat._id);\r\n//                       }}\r\n//                       className=\"bg-gradient-to-r from-yellow-400 to-yellow-500 hover:from-yellow-500 hover:to-yellow-600 text-white px-4 py-2 rounded-lg text-sm transition-all shadow-sm hover:shadow-md\"\r\n//                     >\r\n//                       Edit\r\n//                     </button>\r\n//                     <button\r\n//                       onClick={() => handleDeleteCategory(cat._id)}\r\n//                       className=\"bg-gradient-to-r from-red-400 to-red-500 hover:from-red-500 hover:to-red-600 text-white px-4 py-2 rounded-lg text-sm transition-all shadow-sm hover:shadow-md\"\r\n//                     >\r\n//                       Delete\r\n//                     </button>\r\n//                   </div>\r\n//                 </li>\r\n//               ))}\r\n//             </ul>\r\n//           </div>\r\n\r\n//           {/* Product Form */}\r\n//           <div\r\n//             data-aos=\"fade-up\"\r\n//             data-aos-delay=\"300\"\r\n//             className=\"bg-white p-6 rounded-xl shadow-md border border-gray-100\"\r\n//           >\r\n//             <h1 className=\"text-2xl font-bold text-gray-800 mb-6 flex items-center gap-2\">\r\n//               {editingId ? (\r\n//                 <span className=\"text-yellow-500\">‚úèÔ∏è</span>\r\n//               ) : (\r\n//                 <span className=\"text-blue-500\">‚ûï</span>\r\n//               )}\r\n//               {editingId ? \"Edit Product\" : \"Add Product\"}\r\n//             </h1>\r\n//             <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n//               <input\r\n//                 required\r\n//                 value={formData.name}\r\n//                 onChange={(e) =>\r\n//                   setFormData({ ...formData, name: e.target.value })\r\n//                 }\r\n//                 placeholder=\"Name\"\r\n//                 className=\"border-2 border-gray-200 p-3 w-full rounded-xl focus:border-blue-500 focus:ring-1 focus:ring-blue-200 focus:outline-none transition-all\"\r\n//               />\r\n//               <input\r\n//                 required\r\n//                 value={formData.description}\r\n//                 onChange={(e) =>\r\n//                   setFormData({ ...formData, description: e.target.value })\r\n//                 }\r\n//                 placeholder=\"Description\"\r\n//                 className=\"border-2 border-gray-200 p-3 w-full rounded-xl focus:border-blue-500 focus:ring-1 focus:ring-blue-200 focus:outline-none transition-all\"\r\n//               />\r\n//               <input\r\n//                 required\r\n//                 value={formData.imageUrl}\r\n//                 onChange={(e) =>\r\n//                   setFormData({ ...formData, imageUrl: e.target.value })\r\n//                 }\r\n//                 placeholder=\"Image URL\"\r\n//                 className=\"border-2 border-gray-200 p-3 w-full rounded-xl focus:border-blue-500 focus:ring-1 focus:ring-blue-200 focus:outline-none transition-all\"\r\n//               />\r\n//               <input\r\n//                 required\r\n//                 type=\"number\"\r\n//                 value={formData.price}\r\n//                 onChange={(e) =>\r\n//                   setFormData({ ...formData, price: e.target.value })\r\n//                 }\r\n//                 placeholder=\"Price\"\r\n//                 className=\"border-2 border-gray-200 p-3 w-full rounded-xl focus:border-blue-500 focus:ring-1 focus:ring-blue-200 focus:outline-none transition-all\"\r\n//               />\r\n//               <select\r\n//                 required\r\n//                 value={formData.category}\r\n//                 onChange={(e) =>\r\n//                   setFormData({ ...formData, category: e.target.value })\r\n//                 }\r\n//                 className=\"border-2 border-gray-200 p-3 w-full rounded-xl focus:border-blue-500 focus:ring-1 focus:ring-blue-200 focus:outline-none transition-all\"\r\n//               >\r\n//                 <option value=\"\">Select Category</option>\r\n//                 {categories.map((cat) => (\r\n//                   <option key={cat._id} value={cat._id}>\r\n//                     {cat.name}\r\n//                   </option>\r\n//                 ))}\r\n//               </select>\r\n//               <div className=\"flex gap-3\">\r\n//                 <button\r\n//                   type=\"submit\"\r\n//                   className=\"bg-gradient-to-r from-blue-500 to-blue-600 text-white px-6 py-3 rounded-xl hover:shadow-lg transition-all hover:from-blue-600 hover:to-blue-700\"\r\n//                 >\r\n//                   {editingId ? \"Update\" : \"Add Product\"}\r\n//                 </button>\r\n//                 {editingId && (\r\n//                   <button\r\n//                     type=\"button\"\r\n//                     onClick={() => {\r\n//                       setFormData({\r\n//                         name: \"\",\r\n//                         description: \"\",\r\n//                         imageUrl: \"\",\r\n//                         price: \"\",\r\n//                         category: \"\",\r\n//                       });\r\n//                       setEditingId(null);\r\n//                     }}\r\n//                     className=\"bg-gradient-to-r from-gray-500 to-gray-600 text-white px-6 py-3 rounded-xl hover:shadow-md transition-all\"\r\n//                   >\r\n//                     Cancel\r\n//                   </button>\r\n//                 )}\r\n//               </div>\r\n//             </form>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       {/* Search & Filter */}\r\n//       <div\r\n//         data-aos=\"fade-up\"\r\n//         className=\"mt-8 bg-white p-6 rounded-xl shadow-md border border-gray-100\"\r\n//       >\r\n//         <h1 className=\"text-2xl font-bold text-gray-800 mb-6 flex items-center gap-2\">\r\n//           <span className=\"text-purple-500\">üîç</span> Filter Products\r\n//         </h1>\r\n//         <div className=\"flex flex-col md:flex-row gap-4\">\r\n//           <select\r\n//             onChange={(e) => {\r\n//               setSelectedCategory(e.target.value);\r\n//               setPage(1);\r\n//             }}\r\n//             className=\"border-2 border-gray-200 p-3 rounded-xl focus:border-blue-500 focus:ring-1 focus:ring-blue-200 focus:outline-none transition-all w-full md:w-64\"\r\n//           >\r\n//             <option value=\"\">All Categories</option>\r\n//             {categories.map((cat) => (\r\n//               <option key={cat._id} value={cat._id}>\r\n//                 {cat.name}\r\n//               </option>\r\n//             ))}\r\n//           </select>\r\n//           <input\r\n//             required\r\n//             type=\"text\"\r\n//             placeholder=\"Search products...\"\r\n//             value={searchQuery}\r\n//             onChange={(e) => {\r\n//               setSearchQuery(e.target.value);\r\n//               setPage(1);\r\n//             }}\r\n//             className=\"border-2 border-gray-200 p-3 rounded-xl focus:border-blue-500 focus:ring-1 focus:ring-blue-200 focus:outline-none transition-all w-full\"\r\n//           />\r\n//         </div>\r\n\r\n//         {/* Product Grid */}\r\n//         <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 mt-8\">\r\n//           {products.map((prod, index) => (\r\n//             <div\r\n//               key={prod._id}\r\n//               data-aos=\"fade-up\"\r\n//               data-aos-delay={index * 100}\r\n//               className=\"border-2 border-gray-200 rounded-xl overflow-hidden hover:shadow-lg transition-all hover:border-blue-200 hover:-translate-y-1\"\r\n//             >\r\n//               <div className=\"h-48 w-full overflow-hidden\">\r\n//                 <img\r\n//                   src={prod.imageUrl}\r\n//                   alt={prod.name}\r\n//                   className=\"h-full w-full object-cover hover:scale-105 transition-transform duration-500\"\r\n//                 />\r\n//               </div>\r\n//               <div className=\"p-5\">\r\n//                 <h3 className=\"font-bold text-lg text-gray-800 mb-1\">\r\n//                   {prod.name}\r\n//                 </h3>\r\n//                 <p className=\"text-gray-600 text-sm mb-3 line-clamp-2\">\r\n//                   {prod.description}\r\n//                 </p>\r\n//                 <div className=\"flex justify-between items-center\">\r\n//                   <p className=\"text-blue-600 font-bold text-lg\">\r\n//                     ${prod.price}\r\n//                   </p>\r\n//                   <span className=\"inline-block bg-gradient-to-r from-blue-100 to-blue-200 text-blue-800 text-xs px-3 py-1 rounded-full\">\r\n//                     {prod.category?.name}\r\n//                   </span>\r\n//                 </div>\r\n//                 {isAdmin && (\r\n//                   <div className=\"flex gap-2 mt-4\">\r\n//                     <button\r\n//                       onClick={() => handleEdit(prod)}\r\n//                       className=\"bg-gradient-to-r from-yellow-400 to-yellow-500 hover:from-yellow-500 hover:to-yellow-600 text-white px-4 py-2 rounded-lg text-sm transition-all\"\r\n//                     >\r\n//                       Edit\r\n//                     </button>\r\n//                     <button\r\n//                       onClick={() => handleDelete(prod._id)}\r\n//                       className=\"bg-gradient-to-r from-red-400 to-red-500 hover:from-red-500 hover:to-red-600 text-white px-4 py-2 rounded-lg text-sm transition-all\"\r\n//                     >\r\n//                       Delete\r\n//                     </button>\r\n//                   </div>\r\n//                 )}\r\n//               </div>\r\n//             </div>\r\n//           ))}\r\n//         </div>\r\n\r\n//         {/* Pagination */}\r\n//         <div className=\"flex justify-center mt-8 gap-2\">\r\n//           <button\r\n//             disabled={page <= 1}\r\n//             onClick={() => setPage((p) => p - 1)}\r\n//             className=\"px-5 py-2 bg-gray-200 hover:bg-gray-300 rounded-lg disabled:opacity-50 transition-all flex items-center gap-1 hover:gap-2\"\r\n//           >\r\n//             ‚Üê <span>Prev</span>\r\n//           </button>\r\n//           <span className=\"px-5 py-2 text-gray-700 bg-gray-100 rounded-lg\">\r\n//             Page {page} of {totalPages}\r\n//           </span>\r\n//           <button\r\n//             disabled={page >= totalPages}\r\n//             onClick={() => setPage((p) => p + 1)}\r\n//             className=\"px-5 py-2 bg-gray-200 hover:bg-gray-300 rounded-lg disabled:opacity-50 transition-all flex items-center gap-1 hover:gap-2\"\r\n//           >\r\n//             <span>Next</span> ‚Üí\r\n//           </button>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Product;\r\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}