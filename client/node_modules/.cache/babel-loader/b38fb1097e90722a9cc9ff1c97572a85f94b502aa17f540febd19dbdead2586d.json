{"ast":null,"code":"// import { useEffect, useState } from \"react\";\n\n// function Product() {\n//   const [products, setProducts] = useState([]);\n//   const [categories, setCategories] = useState([]);\n//   const [selectedCategory, setSelectedCategory] = useState(\"\");\n\n//   const [form, setForm] = useState({\n//     name: \"\",\n//     description: \"\",\n//     imageUrl: \"\",\n//     price: \"\",\n//     category: \"\",\n//   });\n\n//   const [newCategoryName, setNewCategoryName] = useState(\"\");\n//   const [showCategoryInput, setShowCategoryInput] = useState(false);\n\n//   useEffect(() => {\n//     fetch(\"http://localhost:5000/api/products\")\n//       .then((res) => res.json())\n//       .then(setProducts);\n\n//     fetch(\"http://localhost:5000/api/categories\")\n//       .then((res) => res.json())\n//       .then(setCategories);\n//   }, []);\n\n//   const addCategory = async () => {\n//     if (!newCategoryName.trim()) return alert(\"Category name required\");\n\n//     const res = await fetch(\"http://localhost:5000/api/categories\", {\n//       method: \"POST\",\n//       headers: { \"Content-Type\": \"application/json\" },\n//       body: JSON.stringify({ name: newCategoryName }),\n//     });\n\n//     if (res.ok) {\n//       const newCategory = await res.json();\n//       setCategories([...categories, newCategory]);\n//       setForm({ ...form, category: newCategory._id });\n//       setNewCategoryName(\"\");\n//       setShowCategoryInput(false);\n//     } else {\n//       const err = await res.json();\n//       alert(err.message || \"Failed to add category\");\n//     }\n//   };\n\n//   const addProduct = async (e) => {\n//     e.preventDefault();\n\n//     if (!form.category) {\n//       alert(\"Please select a category\");\n//       return;\n//     }\n\n//     const res = await fetch(\"http://localhost:5000/api/products\", {\n//       method: \"POST\",\n//       headers: { \"Content-Type\": \"application/json\" },\n//       body: JSON.stringify(form),\n//     });\n\n//     if (res.ok) {\n//       const newProduct = await res.json();\n//       setProducts([...products, newProduct]);\n//       setForm({\n//         name: \"\",\n//         description: \"\",\n//         imageUrl: \"\",\n//         price: \"\",\n//         category: \"\",\n//       });\n//     } else {\n//       const err = await res.json();\n//       alert(err.message || \"Failed to add product\");\n//     }\n//   };\n\n//   const deleteProduct = async (id) => {\n//     if (!window.confirm(\"Are you sure?\")) return;\n//     await fetch(`http://localhost:5000/api/products/${id}`, {\n//       method: \"DELETE\",\n//     });\n//     setProducts(products.filter((p) => p._id !== id));\n//   };\n\n//   return (\n//     <div className=\"p-6\">\n//       <h1 className=\"text-2xl font-bold mb-4\">Add Product</h1>\n//       <form onSubmit={addProduct} className=\"space-y-2\">\n//         <input\n//           type=\"text\"\n//           value={form.name}\n//           placeholder=\"Name\"\n//           onChange={(e) => setForm({ ...form, name: e.target.value })}\n//           className=\"w-full p-2 border rounded\"\n//         />\n//         <input\n//           type=\"text\"\n//           value={form.description}\n//           placeholder=\"Description\"\n//           onChange={(e) => setForm({ ...form, description: e.target.value })}\n//           className=\"w-full p-2 border rounded\"\n//         />\n//         <input\n//           type=\"text\"\n//           value={form.imageUrl}\n//           placeholder=\"Image URL\"\n//           onChange={(e) => setForm({ ...form, imageUrl: e.target.value })}\n//           className=\"w-full p-2 border rounded\"\n//         />\n//         <input\n//           type=\"number\"\n//           value={form.price}\n//           placeholder=\"Price\"\n//           onChange={(e) => setForm({ ...form, price: e.target.value })}\n//           className=\"w-full p-2 border rounded\"\n//         />\n\n//         <select\n//           value={form.category}\n//           onChange={(e) => {\n//             if (e.target.value === \"add_new\") {\n//               setShowCategoryInput(true);\n//               setForm({ ...form, category: \"\" });\n//             } else {\n//               setForm({ ...form, category: e.target.value });\n//               setShowCategoryInput(false);\n//               setNewCategoryName(\"\");\n//             }\n//           }}\n//           className=\"w-full p-2 border rounded\"\n//           required\n//         >\n//           <option value=\"\">Select Category</option>\n//           {categories.map((cat) => (\n//             <option key={cat._id} value={cat._id}>\n//               {cat.name}\n//             </option>\n//           ))}\n//           <option value=\"add_new\">+ Add new category...</option>\n//         </select>\n\n//         {showCategoryInput && (\n//           <div className=\"flex gap-2\">\n//             <input\n//               type=\"text\"\n//               placeholder=\"New category name\"\n//               value={newCategoryName}\n//               onChange={(e) => setNewCategoryName(e.target.value)}\n//               className=\"flex-grow p-2 border rounded\"\n//             />\n//             <button\n//               type=\"button\"\n//               onClick={addCategory}\n//               className=\"bg-green-600 text-white px-4 py-2 rounded\"\n//             >\n//               Save\n//             </button>\n//             <button\n//               type=\"button\"\n//               onClick={() => {\n//                 setShowCategoryInput(false);\n//                 setNewCategoryName(\"\");\n//               }}\n//               className=\"bg-gray-400 text-white px-4 py-2 rounded\"\n//             >\n//               Cancel\n//             </button>\n//           </div>\n//         )}\n\n//         <button className=\"bg-blue-600 text-white px-4 py-2 rounded\">\n//           Add Product\n//         </button>\n//       </form>\n\n//       <h2 className=\"text-xl font-semibold mt-6\">Filter Products</h2>\n//       <select\n//         onChange={(e) => setSelectedCategory(e.target.value)}\n//         className=\"w-full p-2 border rounded mb-4\"\n//       >\n//         <option value=\"\">All</option>\n//         {categories.map((cat) => (\n//           <option key={cat._id} value={cat._id}>\n//             {cat.name}\n//           </option>\n//         ))}\n//       </select>\n\n//       <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n//         {products\n//           .filter(\n//             (p) => !selectedCategory || p.category?._id === selectedCategory\n//           )\n//           .map((p) => (\n//             <div key={p._id} className=\"border p-4 rounded\">\n//               <img\n//                 src={p.imageUrl}\n//                 alt={p.name}\n//                 className=\"w-full h-40 object-cover mb-2\"\n//               />\n//               <h3 className=\"font-bold text-lg\">{p.name}</h3>\n//               <p>{p.description}</p>\n//               <p>${p.price}</p>\n//               <p className=\"text-sm text-gray-500\">{p.category?.name}</p>\n//               <button\n//                 onClick={() => deleteProduct(p._id)}\n//                 className=\"mt-2 bg-red-500 text-white px-3 py-1 rounded\"\n//               >\n//                 Delete\n//               </button>\n//             </div>\n//           ))}\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default Product;","map":{"version":3,"names":[],"sources":["C:/Users/dell/Desktop/my-fullstack-app/client/src/Product.jsx"],"sourcesContent":["// import { useEffect, useState } from \"react\";\r\n\r\n// function Product() {\r\n//   const [products, setProducts] = useState([]);\r\n//   const [categories, setCategories] = useState([]);\r\n//   const [selectedCategory, setSelectedCategory] = useState(\"\");\r\n\r\n//   const [form, setForm] = useState({\r\n//     name: \"\",\r\n//     description: \"\",\r\n//     imageUrl: \"\",\r\n//     price: \"\",\r\n//     category: \"\",\r\n//   });\r\n\r\n//   const [newCategoryName, setNewCategoryName] = useState(\"\");\r\n//   const [showCategoryInput, setShowCategoryInput] = useState(false);\r\n\r\n//   useEffect(() => {\r\n//     fetch(\"http://localhost:5000/api/products\")\r\n//       .then((res) => res.json())\r\n//       .then(setProducts);\r\n\r\n//     fetch(\"http://localhost:5000/api/categories\")\r\n//       .then((res) => res.json())\r\n//       .then(setCategories);\r\n//   }, []);\r\n\r\n//   const addCategory = async () => {\r\n//     if (!newCategoryName.trim()) return alert(\"Category name required\");\r\n\r\n//     const res = await fetch(\"http://localhost:5000/api/categories\", {\r\n//       method: \"POST\",\r\n//       headers: { \"Content-Type\": \"application/json\" },\r\n//       body: JSON.stringify({ name: newCategoryName }),\r\n//     });\r\n\r\n//     if (res.ok) {\r\n//       const newCategory = await res.json();\r\n//       setCategories([...categories, newCategory]);\r\n//       setForm({ ...form, category: newCategory._id });\r\n//       setNewCategoryName(\"\");\r\n//       setShowCategoryInput(false);\r\n//     } else {\r\n//       const err = await res.json();\r\n//       alert(err.message || \"Failed to add category\");\r\n//     }\r\n//   };\r\n\r\n//   const addProduct = async (e) => {\r\n//     e.preventDefault();\r\n\r\n//     if (!form.category) {\r\n//       alert(\"Please select a category\");\r\n//       return;\r\n//     }\r\n\r\n//     const res = await fetch(\"http://localhost:5000/api/products\", {\r\n//       method: \"POST\",\r\n//       headers: { \"Content-Type\": \"application/json\" },\r\n//       body: JSON.stringify(form),\r\n//     });\r\n\r\n//     if (res.ok) {\r\n//       const newProduct = await res.json();\r\n//       setProducts([...products, newProduct]);\r\n//       setForm({\r\n//         name: \"\",\r\n//         description: \"\",\r\n//         imageUrl: \"\",\r\n//         price: \"\",\r\n//         category: \"\",\r\n//       });\r\n//     } else {\r\n//       const err = await res.json();\r\n//       alert(err.message || \"Failed to add product\");\r\n//     }\r\n//   };\r\n\r\n//   const deleteProduct = async (id) => {\r\n//     if (!window.confirm(\"Are you sure?\")) return;\r\n//     await fetch(`http://localhost:5000/api/products/${id}`, {\r\n//       method: \"DELETE\",\r\n//     });\r\n//     setProducts(products.filter((p) => p._id !== id));\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"p-6\">\r\n//       <h1 className=\"text-2xl font-bold mb-4\">Add Product</h1>\r\n//       <form onSubmit={addProduct} className=\"space-y-2\">\r\n//         <input\r\n//           type=\"text\"\r\n//           value={form.name}\r\n//           placeholder=\"Name\"\r\n//           onChange={(e) => setForm({ ...form, name: e.target.value })}\r\n//           className=\"w-full p-2 border rounded\"\r\n//         />\r\n//         <input\r\n//           type=\"text\"\r\n//           value={form.description}\r\n//           placeholder=\"Description\"\r\n//           onChange={(e) => setForm({ ...form, description: e.target.value })}\r\n//           className=\"w-full p-2 border rounded\"\r\n//         />\r\n//         <input\r\n//           type=\"text\"\r\n//           value={form.imageUrl}\r\n//           placeholder=\"Image URL\"\r\n//           onChange={(e) => setForm({ ...form, imageUrl: e.target.value })}\r\n//           className=\"w-full p-2 border rounded\"\r\n//         />\r\n//         <input\r\n//           type=\"number\"\r\n//           value={form.price}\r\n//           placeholder=\"Price\"\r\n//           onChange={(e) => setForm({ ...form, price: e.target.value })}\r\n//           className=\"w-full p-2 border rounded\"\r\n//         />\r\n\r\n//         <select\r\n//           value={form.category}\r\n//           onChange={(e) => {\r\n//             if (e.target.value === \"add_new\") {\r\n//               setShowCategoryInput(true);\r\n//               setForm({ ...form, category: \"\" });\r\n//             } else {\r\n//               setForm({ ...form, category: e.target.value });\r\n//               setShowCategoryInput(false);\r\n//               setNewCategoryName(\"\");\r\n//             }\r\n//           }}\r\n//           className=\"w-full p-2 border rounded\"\r\n//           required\r\n//         >\r\n//           <option value=\"\">Select Category</option>\r\n//           {categories.map((cat) => (\r\n//             <option key={cat._id} value={cat._id}>\r\n//               {cat.name}\r\n//             </option>\r\n//           ))}\r\n//           <option value=\"add_new\">+ Add new category...</option>\r\n//         </select>\r\n\r\n//         {showCategoryInput && (\r\n//           <div className=\"flex gap-2\">\r\n//             <input\r\n//               type=\"text\"\r\n//               placeholder=\"New category name\"\r\n//               value={newCategoryName}\r\n//               onChange={(e) => setNewCategoryName(e.target.value)}\r\n//               className=\"flex-grow p-2 border rounded\"\r\n//             />\r\n//             <button\r\n//               type=\"button\"\r\n//               onClick={addCategory}\r\n//               className=\"bg-green-600 text-white px-4 py-2 rounded\"\r\n//             >\r\n//               Save\r\n//             </button>\r\n//             <button\r\n//               type=\"button\"\r\n//               onClick={() => {\r\n//                 setShowCategoryInput(false);\r\n//                 setNewCategoryName(\"\");\r\n//               }}\r\n//               className=\"bg-gray-400 text-white px-4 py-2 rounded\"\r\n//             >\r\n//               Cancel\r\n//             </button>\r\n//           </div>\r\n//         )}\r\n\r\n//         <button className=\"bg-blue-600 text-white px-4 py-2 rounded\">\r\n//           Add Product\r\n//         </button>\r\n//       </form>\r\n\r\n//       <h2 className=\"text-xl font-semibold mt-6\">Filter Products</h2>\r\n//       <select\r\n//         onChange={(e) => setSelectedCategory(e.target.value)}\r\n//         className=\"w-full p-2 border rounded mb-4\"\r\n//       >\r\n//         <option value=\"\">All</option>\r\n//         {categories.map((cat) => (\r\n//           <option key={cat._id} value={cat._id}>\r\n//             {cat.name}\r\n//           </option>\r\n//         ))}\r\n//       </select>\r\n\r\n//       <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n//         {products\r\n//           .filter(\r\n//             (p) => !selectedCategory || p.category?._id === selectedCategory\r\n//           )\r\n//           .map((p) => (\r\n//             <div key={p._id} className=\"border p-4 rounded\">\r\n//               <img\r\n//                 src={p.imageUrl}\r\n//                 alt={p.name}\r\n//                 className=\"w-full h-40 object-cover mb-2\"\r\n//               />\r\n//               <h3 className=\"font-bold text-lg\">{p.name}</h3>\r\n//               <p>{p.description}</p>\r\n//               <p>${p.price}</p>\r\n//               <p className=\"text-sm text-gray-500\">{p.category?.name}</p>\r\n//               <button\r\n//                 onClick={() => deleteProduct(p._id)}\r\n//                 className=\"mt-2 bg-red-500 text-white px-3 py-1 rounded\"\r\n//               >\r\n//                 Delete\r\n//               </button>\r\n//             </div>\r\n//           ))}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Product;\r\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}