{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\Desktop\\\\my-fullstack-app\\\\client\\\\src\\\\Product.jsx\",\n  _s = $RefreshSig$();\n// // ==== React Component (ProductManager.jsx) ====\n// import { useEffect, useState } from \"react\";\n\n// function Product() {\n//   const [products, setProducts] = useState([]);\n//   const [categories, setCategories] = useState([]);\n//   const [selectedCategory, setSelectedCategory] = useState(\"\");\n\n//   const [formData, setFormData] = useState({\n//     name: \"\",\n//     description: \"\",\n//     imageUrl: \"\",\n//     price: \"\",\n//     category: \"\",\n//   });\n\n//   useEffect(() => {\n//     fetch(\"http://localhost:5000/api/products\")\n//       .then((res) => res.json())\n//       .then(setProducts);\n\n//     fetch(\"http://localhost:5000/api/categories\")\n//       .then((res) => res.json())\n//       .then(setCategories);\n//   }, []);\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     const res = await fetch(\"http://localhost:5000/api/products\", {\n//       method: \"POST\",\n//       headers: { \"Content-Type\": \"application/json\" },\n//       body: JSON.stringify(formData),\n//     });\n//     if (res.ok) {\n//       const newProd = await res.json();\n//       setProducts((prev) => [...prev, newProd]);\n//       setFormData({ name: \"\", description: \"\", imageUrl: \"\", price: \"\", category: \"\" });\n//     }\n//   };\n\n//   const handleDelete = async (id) => {\n//     if (!window.confirm(\"Delete this product?\")) return;\n//     await fetch(`http://localhost:5000/api/products/${id}`, { method: \"DELETE\" });\n//     setProducts(products.filter((p) => p._id !== id));\n//   };\n\n//   return (\n//     <div className=\"p-6\">\n//       <h1 className=\"text-xl font-bold\">Add Product</h1>\n//       <form onSubmit={handleSubmit} className=\"space-y-2\">\n//         <input value={formData.name} onChange={(e) => setFormData({ ...formData, name: e.target.value })} placeholder=\"Name\" className=\"border p-2 w-full\" />\n//         <input value={formData.description} onChange={(e) => setFormData({ ...formData, description: e.target.value })} placeholder=\"Description\" className=\"border p-2 w-full\" />\n//         <input value={formData.imageUrl} onChange={(e) => setFormData({ ...formData, imageUrl: e.target.value })} placeholder=\"Image URL\" className=\"border p-2 w-full\" />\n//         <input type=\"number\" value={formData.price} onChange={(e) => setFormData({ ...formData, price: e.target.value })} placeholder=\"Price\" className=\"border p-2 w-full\" />\n//         <select value={formData.category} onChange={(e) => setFormData({ ...formData, category: e.target.value })} className=\"border p-2 w-full\">\n//           <option value=\"\">Select Category</option>\n//           {categories.map((cat) => (\n//             <option key={cat._id} value={cat._id}>{cat.name}</option>\n//           ))}\n//         </select>\n//         <button type=\"submit\" className=\"bg-blue-500 text-white px-4 py-2 rounded\">Add</button>\n//       </form>\n\n//       <div className=\"mt-6\">\n//         <h2 className=\"text-lg font-semibold\">Filter by Category</h2>\n//         <select onChange={(e) => setSelectedCategory(e.target.value)} className=\"border p-2\">\n//           <option value=\"\">All</option>\n//           {categories.map((cat) => (\n//             <option key={cat._id} value={cat._id}>{cat.name}</option>\n//           ))}\n//         </select>\n\n//         <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mt-4\">\n//           {products\n//             .filter(p => !selectedCategory || p.category?._id === selectedCategory)\n//             .map(prod => (\n//               <div key={prod._id} className=\"border p-4 rounded shadow\">\n//                 <img src={prod.imageUrl} alt={prod.name} className=\"h-40 w-full object-cover mb-2\" />\n//                 <h3 className=\"font-bold\">{prod.name}</h3>\n//                 <p>{prod.description}</p>\n//                 <p className=\"text-sm text-gray-600\">${prod.price}</p>\n//                 <p className=\"text-xs text-gray-400\">{prod.category?.name}</p>\n//                 <button onClick={() => handleDelete(prod._id)} className=\"mt-2 bg-red-500 text-white px-3 py-1 rounded\">Delete</button>\n//               </div>\n//             ))}\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default Product;\n\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Product() {\n  _s();\n  const [products, setProducts] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState(\"\");\n  const [editingId, setEditingId] = useState(null);\n  const [newCategory, setNewCategory] = useState(\"\");\n  const [formData, setFormData] = useState({\n    name: \"\",\n    description: \"\",\n    imageUrl: \"\",\n    price: \"\",\n    category: \"\"\n  });\n  useEffect(() => {\n    fetch(\"http://localhost:5000/api/products\").then(res => res.json()).then(setProducts);\n    fetch(\"http://localhost:5000/api/categories\").then(res => res.json()).then(setCategories);\n  }, []);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (editingId) {\n      const res = await fetch(`http://localhost:5000/api/products/${editingId}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(formData)\n      });\n      if (res.ok) {\n        const updatedProd = await res.json();\n        setProducts(prev => prev.map(p => p._id === editingId ? updatedProd : p));\n        setEditingId(null);\n      }\n    } else {\n      const res = await fetch(\"http://localhost:5000/api/products\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(formData)\n      });\n      if (res.ok) {\n        const newProd = await res.json();\n        setProducts(prev => [...prev, newProd]);\n      }\n    }\n    setFormData({\n      name: \"\",\n      description: \"\",\n      imageUrl: \"\",\n      price: \"\",\n      category: \"\"\n    });\n  };\n  const handleDelete = async id => {\n    if (!window.confirm(\"Delete this product?\")) return;\n    await fetch(`http://localhost:5000/api/products/${id}`, {\n      method: \"DELETE\"\n    });\n    setProducts(products.filter(p => p._id !== id));\n  };\n  const handleEdit = prod => {\n    var _prod$category;\n    setFormData({\n      name: prod.name,\n      description: prod.description,\n      imageUrl: prod.imageUrl,\n      price: prod.price,\n      category: ((_prod$category = prod.category) === null || _prod$category === void 0 ? void 0 : _prod$category._id) || \"\"\n    });\n    setEditingId(prod._id);\n    window.scrollTo({\n      top: 0,\n      behavior: \"smooth\"\n    });\n  };\n  const handleAddCategory = async e => {\n    e.preventDefault();\n    if (!newCategory.trim()) return;\n    const res = await fetch(\"http://localhost:5000/api/categories\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name: newCategory\n      })\n    });\n    if (res.ok) {\n      const created = await res.json();\n      setCategories(prev => [...prev, created]);\n      setNewCategory(\"\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-lg font-semibold\",\n        children: \"Add New Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleAddCategory,\n        className: \"flex flex-col gap-2 items-start mt-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: newCategory,\n          onChange: e => setNewCategory(e.target.value),\n          placeholder: \"New category name\",\n          className: \"border p-2 w-full\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"bg-green-600 text-white px-4 py-2 rounded\",\n          children: \"Add Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-xl font-bold\",\n      children: editingId ? \"Edit Product\" : \"Add Product\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"space-y-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: formData.name,\n        onChange: e => setFormData({\n          ...formData,\n          name: e.target.value\n        }),\n        placeholder: \"Name\",\n        className: \"border p-2 w-full\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: formData.description,\n        onChange: e => setFormData({\n          ...formData,\n          description: e.target.value\n        }),\n        placeholder: \"Description\",\n        className: \"border p-2 w-full\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: formData.imageUrl,\n        onChange: e => setFormData({\n          ...formData,\n          imageUrl: e.target.value\n        }),\n        placeholder: \"Image URL\",\n        className: \"border p-2 w-full\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: formData.price,\n        onChange: e => setFormData({\n          ...formData,\n          price: e.target.value\n        }),\n        placeholder: \"Price\",\n        className: \"border p-2 w-full\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: formData.category,\n        onChange: e => setFormData({\n          ...formData,\n          category: e.target.value\n        }),\n        className: \"border p-2 w-full\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this), categories.map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: cat._id,\n          children: cat.name\n        }, cat._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"bg-blue-500 text-white px-4 py-2 rounded\",\n          children: editingId ? \"Update\" : \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this), editingId && /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => {\n            setFormData({\n              name: \"\",\n              description: \"\",\n              imageUrl: \"\",\n              price: \"\",\n              category: \"\"\n            });\n            setEditingId(null);\n          },\n          className: \"bg-gray-500 text-white px-4 py-2 rounded\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-lg font-semibold\",\n        children: \"Filter by Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => setSelectedCategory(e.target.value),\n        className: \"border p-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 11\n        }, this), categories.map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: cat._id,\n          children: cat.name\n        }, cat._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-3 gap-4 mt-4\",\n        children: products.filter(p => {\n          var _p$category;\n          return !selectedCategory || ((_p$category = p.category) === null || _p$category === void 0 ? void 0 : _p$category._id) === selectedCategory;\n        }).map(prod => {\n          var _prod$category2;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"border p-4 rounded shadow\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: prod.imageUrl,\n              alt: prod.name,\n              className: \"h-40 w-full object-cover mb-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"font-bold\",\n              children: prod.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: prod.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-gray-600\",\n              children: [\"$\", prod.price]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-xs text-gray-400\",\n              children: (_prod$category2 = prod.category) === null || _prod$category2 === void 0 ? void 0 : _prod$category2.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex gap-2 mt-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleEdit(prod),\n                className: \"bg-yellow-500 text-white px-3 py-1 rounded\",\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDelete(prod._id),\n                className: \"bg-red-500 text-white px-3 py-1 rounded\",\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 17\n            }, this)]\n          }, prod._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 199,\n    columnNumber: 5\n  }, this);\n}\n_s(Product, \"hQQKXODAFnJWCjpCp/k1WyheFMo=\");\n_c = Product;\nexport default Product;\nvar _c;\n$RefreshReg$(_c, \"Product\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","Product","_s","products","setProducts","categories","setCategories","selectedCategory","setSelectedCategory","editingId","setEditingId","newCategory","setNewCategory","formData","setFormData","name","description","imageUrl","price","category","fetch","then","res","json","handleSubmit","e","preventDefault","method","headers","body","JSON","stringify","ok","updatedProd","prev","map","p","_id","newProd","handleDelete","id","window","confirm","filter","handleEdit","prod","_prod$category","scrollTo","top","behavior","handleAddCategory","trim","created","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","target","placeholder","type","cat","onClick","_p$category","_prod$category2","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/dell/Desktop/my-fullstack-app/client/src/Product.jsx"],"sourcesContent":["// // ==== React Component (ProductManager.jsx) ====\r\n// import { useEffect, useState } from \"react\";\r\n\r\n// function Product() {\r\n//   const [products, setProducts] = useState([]);\r\n//   const [categories, setCategories] = useState([]);\r\n//   const [selectedCategory, setSelectedCategory] = useState(\"\");\r\n\r\n//   const [formData, setFormData] = useState({\r\n//     name: \"\",\r\n//     description: \"\",\r\n//     imageUrl: \"\",\r\n//     price: \"\",\r\n//     category: \"\",\r\n//   });\r\n\r\n//   useEffect(() => {\r\n//     fetch(\"http://localhost:5000/api/products\")\r\n//       .then((res) => res.json())\r\n//       .then(setProducts);\r\n\r\n//     fetch(\"http://localhost:5000/api/categories\")\r\n//       .then((res) => res.json())\r\n//       .then(setCategories);\r\n//   }, []);\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     const res = await fetch(\"http://localhost:5000/api/products\", {\r\n//       method: \"POST\",\r\n//       headers: { \"Content-Type\": \"application/json\" },\r\n//       body: JSON.stringify(formData),\r\n//     });\r\n//     if (res.ok) {\r\n//       const newProd = await res.json();\r\n//       setProducts((prev) => [...prev, newProd]);\r\n//       setFormData({ name: \"\", description: \"\", imageUrl: \"\", price: \"\", category: \"\" });\r\n//     }\r\n//   };\r\n\r\n//   const handleDelete = async (id) => {\r\n//     if (!window.confirm(\"Delete this product?\")) return;\r\n//     await fetch(`http://localhost:5000/api/products/${id}`, { method: \"DELETE\" });\r\n//     setProducts(products.filter((p) => p._id !== id));\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"p-6\">\r\n//       <h1 className=\"text-xl font-bold\">Add Product</h1>\r\n//       <form onSubmit={handleSubmit} className=\"space-y-2\">\r\n//         <input value={formData.name} onChange={(e) => setFormData({ ...formData, name: e.target.value })} placeholder=\"Name\" className=\"border p-2 w-full\" />\r\n//         <input value={formData.description} onChange={(e) => setFormData({ ...formData, description: e.target.value })} placeholder=\"Description\" className=\"border p-2 w-full\" />\r\n//         <input value={formData.imageUrl} onChange={(e) => setFormData({ ...formData, imageUrl: e.target.value })} placeholder=\"Image URL\" className=\"border p-2 w-full\" />\r\n//         <input type=\"number\" value={formData.price} onChange={(e) => setFormData({ ...formData, price: e.target.value })} placeholder=\"Price\" className=\"border p-2 w-full\" />\r\n//         <select value={formData.category} onChange={(e) => setFormData({ ...formData, category: e.target.value })} className=\"border p-2 w-full\">\r\n//           <option value=\"\">Select Category</option>\r\n//           {categories.map((cat) => (\r\n//             <option key={cat._id} value={cat._id}>{cat.name}</option>\r\n//           ))}\r\n//         </select>\r\n//         <button type=\"submit\" className=\"bg-blue-500 text-white px-4 py-2 rounded\">Add</button>\r\n//       </form>\r\n\r\n//       <div className=\"mt-6\">\r\n//         <h2 className=\"text-lg font-semibold\">Filter by Category</h2>\r\n//         <select onChange={(e) => setSelectedCategory(e.target.value)} className=\"border p-2\">\r\n//           <option value=\"\">All</option>\r\n//           {categories.map((cat) => (\r\n//             <option key={cat._id} value={cat._id}>{cat.name}</option>\r\n//           ))}\r\n//         </select>\r\n\r\n//         <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mt-4\">\r\n//           {products\r\n//             .filter(p => !selectedCategory || p.category?._id === selectedCategory)\r\n//             .map(prod => (\r\n//               <div key={prod._id} className=\"border p-4 rounded shadow\">\r\n//                 <img src={prod.imageUrl} alt={prod.name} className=\"h-40 w-full object-cover mb-2\" />\r\n//                 <h3 className=\"font-bold\">{prod.name}</h3>\r\n//                 <p>{prod.description}</p>\r\n//                 <p className=\"text-sm text-gray-600\">${prod.price}</p>\r\n//                 <p className=\"text-xs text-gray-400\">{prod.category?.name}</p>\r\n//                 <button onClick={() => handleDelete(prod._id)} className=\"mt-2 bg-red-500 text-white px-3 py-1 rounded\">Delete</button>\r\n//               </div>\r\n//             ))}\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Product;\r\n\r\nimport { useEffect, useState } from \"react\";\r\n\r\nfunction Product() {\r\n  const [products, setProducts] = useState([]);\r\n  const [categories, setCategories] = useState([]);\r\n  const [selectedCategory, setSelectedCategory] = useState(\"\");\r\n  const [editingId, setEditingId] = useState(null);\r\n  const [newCategory, setNewCategory] = useState(\"\");\r\n\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    description: \"\",\r\n    imageUrl: \"\",\r\n    price: \"\",\r\n    category: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:5000/api/products\")\r\n      .then((res) => res.json())\r\n      .then(setProducts);\r\n\r\n    fetch(\"http://localhost:5000/api/categories\")\r\n      .then((res) => res.json())\r\n      .then(setCategories);\r\n  }, []);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (editingId) {\r\n      const res = await fetch(\r\n        `http://localhost:5000/api/products/${editingId}`,\r\n        {\r\n          method: \"PUT\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify(formData),\r\n        }\r\n      );\r\n      if (res.ok) {\r\n        const updatedProd = await res.json();\r\n        setProducts((prev) =>\r\n          prev.map((p) => (p._id === editingId ? updatedProd : p))\r\n        );\r\n        setEditingId(null);\r\n      }\r\n    } else {\r\n      const res = await fetch(\"http://localhost:5000/api/products\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(formData),\r\n      });\r\n      if (res.ok) {\r\n        const newProd = await res.json();\r\n        setProducts((prev) => [...prev, newProd]);\r\n      }\r\n    }\r\n\r\n    setFormData({\r\n      name: \"\",\r\n      description: \"\",\r\n      imageUrl: \"\",\r\n      price: \"\",\r\n      category: \"\",\r\n    });\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    if (!window.confirm(\"Delete this product?\")) return;\r\n    await fetch(`http://localhost:5000/api/products/${id}`, {\r\n      method: \"DELETE\",\r\n    });\r\n    setProducts(products.filter((p) => p._id !== id));\r\n  };\r\n\r\n  const handleEdit = (prod) => {\r\n    setFormData({\r\n      name: prod.name,\r\n      description: prod.description,\r\n      imageUrl: prod.imageUrl,\r\n      price: prod.price,\r\n      category: prod.category?._id || \"\",\r\n    });\r\n    setEditingId(prod._id);\r\n    window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n  };\r\n\r\n  const handleAddCategory = async (e) => {\r\n    e.preventDefault();\r\n    if (!newCategory.trim()) return;\r\n\r\n    const res = await fetch(\"http://localhost:5000/api/categories\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ name: newCategory }),\r\n    });\r\n\r\n    if (res.ok) {\r\n      const created = await res.json();\r\n      setCategories((prev) => [...prev, created]);\r\n      setNewCategory(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-6\">\r\n      {/* Add New Category */}\r\n      <div className=\"mt-6\">\r\n        <h2 className=\"text-lg font-semibold\">Add New Category</h2>\r\n        <form\r\n          onSubmit={handleAddCategory}\r\n          className=\"flex flex-col gap-2 items-start mt-2\"\r\n        >\r\n          <input\r\n            value={newCategory}\r\n            onChange={(e) => setNewCategory(e.target.value)}\r\n            placeholder=\"New category name\"\r\n            className=\"border p-2 w-full\"\r\n          />\r\n          <button\r\n            type=\"submit\"\r\n            className=\"bg-green-600 text-white px-4 py-2 rounded\"\r\n          >\r\n            Add Category\r\n          </button>\r\n        </form>\r\n      </div>\r\n      <h1 className=\"text-xl font-bold\">\r\n        {editingId ? \"Edit Product\" : \"Add Product\"}\r\n      </h1>\r\n      <form onSubmit={handleSubmit} className=\"space-y-2\">\r\n        <input\r\n          value={formData.name}\r\n          onChange={(e) => setFormData({ ...formData, name: e.target.value })}\r\n          placeholder=\"Name\"\r\n          className=\"border p-2 w-full\"\r\n        />\r\n        <input\r\n          value={formData.description}\r\n          onChange={(e) =>\r\n            setFormData({ ...formData, description: e.target.value })\r\n          }\r\n          placeholder=\"Description\"\r\n          className=\"border p-2 w-full\"\r\n        />\r\n        <input\r\n          value={formData.imageUrl}\r\n          onChange={(e) =>\r\n            setFormData({ ...formData, imageUrl: e.target.value })\r\n          }\r\n          placeholder=\"Image URL\"\r\n          className=\"border p-2 w-full\"\r\n        />\r\n        <input\r\n          type=\"number\"\r\n          value={formData.price}\r\n          onChange={(e) => setFormData({ ...formData, price: e.target.value })}\r\n          placeholder=\"Price\"\r\n          className=\"border p-2 w-full\"\r\n        />\r\n        <select\r\n          value={formData.category}\r\n          onChange={(e) =>\r\n            setFormData({ ...formData, category: e.target.value })\r\n          }\r\n          className=\"border p-2 w-full\"\r\n        >\r\n          <option value=\"\">Select Category</option>\r\n          {categories.map((cat) => (\r\n            <option key={cat._id} value={cat._id}>\r\n              {cat.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <div className=\"flex gap-2\">\r\n          <button\r\n            type=\"submit\"\r\n            className=\"bg-blue-500 text-white px-4 py-2 rounded\"\r\n          >\r\n            {editingId ? \"Update\" : \"Add\"}\r\n          </button>\r\n          {editingId && (\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => {\r\n                setFormData({\r\n                  name: \"\",\r\n                  description: \"\",\r\n                  imageUrl: \"\",\r\n                  price: \"\",\r\n                  category: \"\",\r\n                });\r\n                setEditingId(null);\r\n              }}\r\n              className=\"bg-gray-500 text-white px-4 py-2 rounded\"\r\n            >\r\n              Cancel\r\n            </button>\r\n          )}\r\n        </div>\r\n      </form>\r\n\r\n      {/* Category Filter */}\r\n      <div className=\"mt-6\">\r\n        <h2 className=\"text-lg font-semibold\">Filter by Category</h2>\r\n        <select\r\n          onChange={(e) => setSelectedCategory(e.target.value)}\r\n          className=\"border p-2\"\r\n        >\r\n          <option value=\"\">All</option>\r\n          {categories.map((cat) => (\r\n            <option key={cat._id} value={cat._id}>\r\n              {cat.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n\r\n        {/* Product List */}\r\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mt-4\">\r\n          {products\r\n            .filter(\r\n              (p) => !selectedCategory || p.category?._id === selectedCategory\r\n            )\r\n            .map((prod) => (\r\n              <div key={prod._id} className=\"border p-4 rounded shadow\">\r\n                <img\r\n                  src={prod.imageUrl}\r\n                  alt={prod.name}\r\n                  className=\"h-40 w-full object-cover mb-2\"\r\n                />\r\n                <h3 className=\"font-bold\">{prod.name}</h3>\r\n                <p>{prod.description}</p>\r\n                <p className=\"text-sm text-gray-600\">${prod.price}</p>\r\n                <p className=\"text-xs text-gray-400\">{prod.category?.name}</p>\r\n                <div className=\"flex gap-2 mt-2\">\r\n                  <button\r\n                    onClick={() => handleEdit(prod)}\r\n                    className=\"bg-yellow-500 text-white px-3 py-1 rounded\"\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    onClick={() => handleDelete(prod._id)}\r\n                    className=\"bg-red-500 text-white px-3 py-1 rounded\"\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Product;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}